"use strict";(self.webpackChunkmy_docs_website=self.webpackChunkmy_docs_website||[]).push([[8239],{22138:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var o=t(74848),s=t(28453);const a={},c="Quick experience",r={id:"user_manual/user_best_practices/tutorial/quickstart",title:"Quick experience",description:"This topic describes how to deploy OceanBase Database for quick experience.",source:"@site/docs/user_manual/user_best_practices/tutorial/quickstart.md",sourceDirName:"user_manual/user_best_practices/tutorial",slug:"/user_manual/user_best_practices/tutorial/quickstart",permalink:"/docs/user_manual/user_best_practices/tutorial/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/oceanbase.github.io/tree/main/docs/user_manual/user_best_practices/tutorial/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"deploy_in_production",permalink:"/docs/user_manual/user_best_practices/tutorial/deploy_in_production"}},i={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Use OBD to deploy OceanBase Database",id:"use-obd-to-deploy-oceanbase-database",level:3},{value:"Step 1: Download and install OBD",id:"step-1-download-and-install-obd",level:4},{value:"Step 2: Use the obd demo command for quick deployment",id:"step-2-use-the-obd-demo-command-for-quick-deployment",level:4},{value:"Step 3: Connect to OceanBase Database",id:"step-3-connect-to-oceanbase-database",level:4},{value:"Use Docker to deploy OceanBase Database",id:"use-docker-to-deploy-oceanbase-database",level:3},{value:"Step 1: Start an OceanBase Database instance",id:"step-1-start-an-oceanbase-database-instance",level:4},{value:"Step 2: Connect to the OceanBase Database instance",id:"step-2-connect-to-the-oceanbase-database-instance",level:4}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"quick-experience",children:"Quick experience"})}),"\n",(0,o.jsx)(n.p,{children:"This topic describes how to deploy OceanBase Database for quick experience."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"Your server is connected to the Internet, and your hardware and software meet the following requirements."}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Item"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"OS"}),(0,o.jsx)(n.td,{children:(0,o.jsxs)("ul",{children:[(0,o.jsx)("li",{children:"Anolis OS 8.X (Linux kernel V3.10.0 or later)"}),(0,o.jsx)("li",{children:"Red Hat Enterprise Linux Server 7.X (Linux kernel V3.10.0 or later)"}),(0,o.jsx)("li",{children:"CentOS Linux 7.X (Linux kernel V3.10.0 or later)"})]})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"CPU"}),(0,o.jsx)(n.td,{children:"At least two cores or preferably four cores or more"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Memory"}),(0,o.jsx)(n.td,{children:"At least 10 GB or preferably 16 GB or more"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Disk type"}),(0,o.jsx)(n.td,{children:"Preferably SSD"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Disk space"}),(0,o.jsx)(n.td,{children:"Four times the memory size or more"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"File system"}),(0,o.jsx)(n.td,{children:"EXT4 or XFS. Choose XFS when the data volume exceeds 16 TB."})]})]})]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Note"})}),"\n",(0,o.jsx)(n.p,{children:"At least 10 GB of memory is required if you use Docker to deploy OceanBase Database."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"use-obd-to-deploy-oceanbase-database",children:"Use OBD to deploy OceanBase Database"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Note"})}),"\n",(0,o.jsx)(n.p,{children:"The following describes the deployment of OceanBase Database on an x86-based CentOS Linux 7.9 system. The procedure may be different on other OSs."}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"step-1-download-and-install-obd",children:"Step 1: Download and install OBD"}),"\n",(0,o.jsx)(n.p,{children:"OceanBase Deployer (OBD) is the most efficient deployment tool to make OceanBase Database ready to work. We recommend that you use OBD when you deploy OceanBase Database for experience. Download and install OBD by performing the following steps.\nIf the server has access to the Internet and allows you to add a third-party YUM repository as the software source, you can run the following command to install OBD from the official software source of OceanBase:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"sudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https://mirrors.aliyun.com/oceanbase/OceanBase.repo\nsudo yum install -y ob-deploy\n"})}),"\n",(0,o.jsx)(n.h4,{id:"step-2-use-the-obd-demo-command-for-quick-deployment",children:"Step 2: Use the obd demo command for quick deployment"}),"\n",(0,o.jsxs)(n.p,{children:["With the ",(0,o.jsx)(n.code,{children:"obd demo"})," command, you can directly deploy and start a specified component on your local computer without loading the configuration file. The fixed name of the cluster deployed is ",(0,o.jsx)(n.code,{children:"demo"}),". After the deployment, you can run the ",(0,o.jsx)(n.code,{children:"obd cluster list"})," command to view the cluster in the cluster list. You can also run other cluster commands to manage the cluster, such as ",(0,o.jsx)(n.code,{children:"obd cluster display demo"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"obd demo [-c/--components] \n"})}),"\n",(0,o.jsx)(n.p,{children:"The following table describes the parameters."}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Parameter"}),(0,o.jsx)(n.th,{children:"Required"}),(0,o.jsx)(n.th,{children:"Data type"}),(0,o.jsx)(n.th,{children:"Default value"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"-c or --components"}),(0,o.jsx)(n.td,{children:"No"}),(0,o.jsx)(n.td,{children:"String"}),(0,o.jsx)(n.td,{children:"oceanbase-ce,obagent,prometheus,grafana"}),(0,o.jsxs)(n.td,{children:["The list of components that are separated with commas (",(0,o.jsx)(n.code,{children:","}),"). You can use this parameter to specify the components to be deployed."]})]})})]}),"\n",(0,o.jsx)(n.p,{children:"By default, this command deploys the minimum specifications in the home directory of the current user, and the latest versions are deployed by default. You can use this command to deploy OceanBase Community Edition, OBProxy Community Edition, OBAgent, Grafana, and Prometheus."}),"\n",(0,o.jsx)(n.p,{children:"You can select the version and specify the configurations of a component to be deployed."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Deploy components of the specified version.\nobd demo -c oceanbase-ce,obproxy-ce --oceanbase-ce.version=4.2.1\n# Specify the components to be deployed and the package hash of OceanBase Community Edition.\nobd demo -c oceanbase-ce,obproxy-ce --oceanbase-ce.package_hash=f38723204d49057d3e062ffad778edc1552a7c114622bf2a86fea769fbd202ea\n# Specify the installation path for all components to be deployed.\n## Deploy OceanBase Community Edition and OBProxy Community Edition in the /data/demo directory and create corresponding working directories for them.\nobd demo -c oceanbase-ce,obproxy-ce --home_path=/data/demo\n# Specify the installation path for all components to be deployed.\nobd demo --home_path=/path\n# Specify the installation path for a specific component to be deployed.\n## Deploy OceanBase Community Edition in the home directory and create a working directory for it, and deploy OBProxy in the /data/playground/obproxy-ce directory.\nobd demo -c oceanbase-ce,obproxy-ce --obproxy-ce.home_path=/data/demo/\n# Specify the configurations of a component to be deployed.\n## Specify the mysql_port parameter of OceanBase Community Edition.\nobd demo --oceanbase-ce.mysql_port=3881\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Notice"})}),"\n",(0,o.jsx)(n.p,{children:"This command supports only level-1 configurations under global that are specified by using options."}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"step-3-connect-to-oceanbase-database",children:"Step 3: Connect to OceanBase Database"}),"\n",(0,o.jsx)(n.p,{children:"Perform the following steps to connect to OceanBase Database:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install the OceanBase Database client (OBClient):"}),"\n",(0,o.jsx)(n.p,{children:"If you have added the official YUM repository of OceanBase as the software source, run the following command to install the OBClient:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"sudo yum install -y obclient\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Run the following command to connect to OceanBase Database by using the OBClient:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"obclient -h127.0.0.1 -P2881 -uroot@sys\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"use-docker-to-deploy-oceanbase-database",children:"Use Docker to deploy OceanBase Database"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Notice"})}),"\n",(0,o.jsxs)(n.p,{children:["Before you deploy the ",(0,o.jsx)(n.a,{href:"https://hub.docker.com/r/oceanbase/oceanbase-ce",children:"oceanbase-ce"})," image, make sure that the following prerequisites are met:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"The resources on your server are sufficient to support a Docker container with at least 2 CPU cores and 8 GB of memory."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["You have installed the latest version of Docker on your server. For more information, see the ",(0,o.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker Documentation"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"You have started the Docker service on your server."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"step-1-start-an-oceanbase-database-instance",children:"Step 1: Start an OceanBase Database instance"}),"\n",(0,o.jsx)(n.p,{children:"Run the following command to start an OceanBase Database instance:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"# Deploy an instance with the maximum specifications supported by the container.\ndocker run -p 2881:2881 --name obstandalone -d oceanbase/oceanbase-ce\n## Deploy a mini standalone instance.\ndocker run -p 2881:2881 --name obstandalone -e MINI_MODE=1 -d oceanbase/oceanbase-ce\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Note"})}),"\n",(0,o.jsxs)(n.p,{children:["By default, the preceding command pulls the latest version of Docker image. You can select a desired docker image from ",(0,o.jsx)(n.a,{href:"https://hub.docker.com/r/oceanbase/oceanbase-ce/tags",children:"Docker images"})," as needed."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'The process is expected to take two to five minutes. Run the following command. If "boot success!" is returned, the instance is started.'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"$ docker logs obstandalone | tail -1\nboot success!\n"})}),"\n",(0,o.jsx)(n.h4,{id:"step-2-connect-to-the-oceanbase-database-instance",children:"Step 2: Connect to the OceanBase Database instance"}),"\n",(0,o.jsxs)(n.p,{children:["The oceanbase-ce image is integrated with the OBClient and the default connection script ",(0,o.jsx)(n.code,{children:"ob-mysql"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"docker exec -it obstandalone ob-mysql sys # Connect to the root user of the sys tenant.\ndocker exec -it obstandalone ob-mysql root # Connect to the root user of the test tenant.\ndocker exec -it obstandalone ob-mysql test # Connect to the test user of the test tenant.\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can also run the following command to connect to the instance by using the OBClient or MySQL client on your local server."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"mysql -uroot -h127.1 -P2881\n"})}),"\n",(0,o.jsx)(n.p,{children:"After the connection is established, the following information is displayed:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-test",children:"$ docker exec -it obstandalone ob-mysql sys\n\nlogin as root@sys\nCommand is: obclient -h127.1 -uroot@sys -A -Doceanbase -P2881\nWelcome to the OceanBase.  Commands end with ; or \\g.\nYour OceanBase connection id is 3221487638\nServer version: 5.7.25 OceanBase 4.0.0 (r10100032022041510-a09d3134c10665f03fd56d7f8bdd413b2b771977) (Built Oct 15 2022 02:16:22)\n\nCopyright (c) 2000, 2022, OceanBase and/or its affiliates. All  rights reserved.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMySQL [oceanbase]>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var o=t(96540);const s={},a=o.createContext(s);function c(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);