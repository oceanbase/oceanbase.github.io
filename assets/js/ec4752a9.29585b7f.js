"use strict";(self.webpackChunkmy_docs_website=self.webpackChunkmy_docs_website||[]).push([[9331],{32072:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var d=s(74848),i=s(28453);const r={},n="Testing commands",c={id:"obd/user-guide/obd-command/test-command-group",title:"Testing commands",description:"OBD provides multiple-level commands. You can use the -h/--help option to view the help information of sub-commands. Similarly, you can also use -v/--verbose to view the detailed execution process of commands when the execution of sub commands reports an error.",source:"@site/docs/obd/300.user-guide/300.obd-command/300.test-command-group.md",sourceDirName:"obd/300.user-guide/300.obd-command",slug:"/obd/user-guide/obd-command/test-command-group",permalink:"/docs/obd/user-guide/obd-command/test-command-group",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/oceanbase.github.io/tree/main/docs/obd/300.user-guide/300.obd-command/300.test-command-group.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{}},l={},h=[{value:"obd test mysqltest",id:"obd-test-mysqltest",level:2},{value:"obd test sysbench",id:"obd-test-sysbench",level:2},{value:"obd test tpch",id:"obd-test-tpch",level:2},{value:"obd test tpcc",id:"obd-test-tpcc",level:2}];function o(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{id:"testing-commands",children:"Testing commands"}),"\n",(0,d.jsxs)(t.p,{children:["OBD provides multiple-level commands. You can use the ",(0,d.jsx)(t.code,{children:"-h/--help"})," option to view the help information of sub-commands. Similarly, you can also use ",(0,d.jsx)(t.code,{children:"-v/--verbose"})," to view the detailed execution process of commands when the execution of sub commands reports an error."]}),"\n",(0,d.jsx)(t.h2,{id:"obd-test-mysqltest",children:"obd test mysqltest"}),"\n",(0,d.jsx)(t.p,{children:"Runs the mysqltest on the specified node of an OcecanBase cluster or ODP. To run the mysqltest, you must install OBClient."}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-shell",children:"obd test mysqltest <deploy name> [--test-set <test-set>] [flags]\r\n# example\r\nobd test mysqltest test --all --auto-retry\n"})}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"deploy name"})," parameter specifies the name of the deployed cluster. You can consider it as an alias for the configuration file."]}),"\n",(0,d.jsx)(t.p,{children:"This table describes the corresponding options."}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Option"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Data type"}),(0,d.jsx)(t.th,{children:"Default value"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--component"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The name of the component to be tested. Valid values: ",(0,d.jsx)(t.code,{children:"oceanbase-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"})," and ",(0,d.jsx)(t.code,{children:"obproxy"}),". If you do not specify a value, the existence of ",(0,d.jsx)(t.code,{children:"obproxy"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"oceanbase-ce"})," is checked sequentially. The traversal stops when a component is found, and the component is then tested."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-server"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"The first node of the specified component."}),(0,d.jsxs)(t.td,{children:["Machine to be tested, followed by the ",(0,d.jsx)(t.code,{children:"name"})," value corresponding to ",(0,d.jsx)(t.code,{children:"servers"})," in the ",(0,d.jsx)(t.code,{children:"yaml"})," file. If the ",(0,d.jsx)(t.code,{children:"name"})," value is not configured after ",(0,d.jsx)(t.code,{children:"servers"}),", the ",(0,d.jsx)(t.code,{children:"ip"})," value is used. It must be the name of a node of the specified component."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--user"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"admin"}),(0,d.jsx)(t.td,{children:"The username for running the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--password"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"admin"}),(0,d.jsx)(t.td,{children:"The password for running the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--database"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The database where the test is to be performed."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--mysqltest-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"/u01/obclient/bin/mysqltest"}),(0,d.jsx)(t.td,{children:"The path of the mysqltest binary file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--obclient-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"obclient"}),(0,d.jsx)(t.td,{children:"The path of the OBClient binary file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./mysql_test/t"}),(0,d.jsx)(t.td,{children:"The directory that stores the test file required for the mysqltest. If no test file is found in the directory, OBD will search for a built-in test file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-file-suffix"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:".test"}),(0,d.jsx)(t.td,{children:"The suffix of the test file required by mysqltest."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--result-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./mysql_test/r"}),(0,d.jsx)(t.td,{children:"The directory that stores the result file required for the mysqltest. If no result file is found in the directory, OBD will search for a built-in result file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--result-file-suffix"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:".result"}),(0,d.jsx)(t.td,{children:"The suffix of the result file required by mysqltest."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--record"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to record only the execution results of mysqltest in the record files."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--record-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"./record"}),(0,d.jsx)(t.td,{children:"The directory where the record files that record the execution results of mysqltest are stored."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--record-file-suffix"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:".record"}),(0,d.jsx)(t.td,{children:"The suffix of the record files that record the execution results of mysqltest."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--tmp-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./tmp"}),(0,d.jsx)(t.td,{children:"The mysqltest tmpdir option."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--var-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./var"}),(0,d.jsx)(t.td,{children:"The directory to create the log directory. The log directory will be added to the mysqltest command as the logdir option."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-set"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"None"}),(0,d.jsxs)(t.td,{children:["The array of test cases. Separate multiple cases with commas (",(0,d.jsx)(t.code,{children:","}),")."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--exclude"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"None"}),(0,d.jsxs)(t.td,{children:["The array of test cases to be excluded. Separate multiple cases with commas (",(0,d.jsx)(t.code,{children:","}),")."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-pattern"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"None"}),(0,d.jsx)(t.td,{children:"The regular expression for matching test file names. Test cases matching the regular expression will overwrite the values of the test-set option."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--suite"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"None"}),(0,d.jsxs)(t.td,{children:["The suite array. A suite contains multiple tests. Separate multiple tests with commas (",(0,d.jsx)(t.code,{children:","}),"). If this option is enabled, the --test-pattern and --test-set options will become invalid."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--suite-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./mysql_test/test_suite"}),(0,d.jsx)(t.td,{children:"The directory that stores the suite directory. If no suite directory is found in the directory, OBD will search for a built-in suite directory."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--all"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to run all test cases in the directory specified for the --suite-dir option. The --suite-dir option specifies the directory that stores the suite directory."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--need-init"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to run the init sql files. Before OBD runs the mysqltest on a new cluster, it may run some initialization files. For example, it may create some accounts or tenants required for running the test cases. The --suite-dir option specifies the directory that stores the suite directory. This option is disabled by default."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--init-sql-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./"}),(0,d.jsx)(t.td,{children:"The directory that stores the init sql files. If no init sql file is found in the directory, OBD will search for built-in init sql files."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--init-sql-files"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The init sql files to be run when initialization is required. Separate multiple init sql files with commas (",(0,d.jsx)(t.code,{children:","}),"). If this option is not specified but initialization is required, OBD will run the built-in init files based on the cluster configurations."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--auto-retry"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to automatically redeploy the cluster for a retry after a test fails."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--psmall"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to execute the cases in psmall mode."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--slices"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Int"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The number of slices into which the case to be executed is divided."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--slice-idx"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Int"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The ID of the current slice."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--slb-host"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The host for soft load balancing."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--exec-id"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The ID of the execution."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--case-filter"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"./mysql_test/filter.py"}),(0,d.jsx)(t.td,{children:"The filter.py file, which contains lists of cases to be filtered out."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--reboot-timeout"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Int"}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"The timeout period for the restart."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--reboot-retries"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Int"}),(0,d.jsx)(t.td,{children:"5"}),(0,d.jsx)(t.td,{children:"The number of retries allowed if the restart fails."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--collect-all"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to collect component logs."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--log-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"tmp_dir/log"})}),(0,d.jsx)(t.td,{children:"The path to the directory where the mysqltest logs are stored."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--log-pattern"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"*.log"}),(0,d.jsx)(t.td,{children:"The regular expression that is used to match log file names. Files that match the expression are collected."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--case-timeout"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Int"}),(0,d.jsx)(t.td,{children:"3600"}),(0,d.jsx)(t.td,{children:"The timeout period for a single test of mysqltest."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--disable-reboot"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"Bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies whether to disable restart during the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--collect-components"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["Specify the components to collect logs. Multiple components are separated by commas (",(0,d.jsx)(t.code,{children:","}),")."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--init-only"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"If this option is true, it means that only init SQL is executed."})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"obd-test-sysbench",children:"obd test sysbench"}),"\n",(0,d.jsx)(t.p,{children:"Runs the Sysbench test on the specified node of an OcecanBase cluster or ODP.  To run the Sysbench test, you must install OBClient and ob-sysbench."}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-shell",children:"obd test sysbench <deploy name> [flags]\r\n# example\r\nsudo yum install ob-sysbench\r\nobd test sysbench test --tenant=sysbench --script-name=oltp_read_only.lua --table-size=1000000 --threads=32 --rand-type=uniform\n"})}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"deploy name"})," parameter specifies the name of the deployed cluster. You can consider it as an alias for the configuration file."]}),"\n",(0,d.jsx)(t.p,{children:"This table describes the corresponding options."}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Option"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Data type"}),(0,d.jsx)(t.th,{children:"Default value"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--component"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The name of the component to be tested. Valid values: ",(0,d.jsx)(t.code,{children:"oceanbase-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"})," and ",(0,d.jsx)(t.code,{children:"obproxy"}),". If you do not specify a value, the existence of ",(0,d.jsx)(t.code,{children:"obproxy"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"oceanbase-ce"})," is checked sequentially. The traversal stops when a component is found, and the component is then tested."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-server"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"The first node of the specified component."}),(0,d.jsxs)(t.td,{children:["Machine to be tested, followed by the ",(0,d.jsx)(t.code,{children:"name"})," value corresponding to ",(0,d.jsx)(t.code,{children:"servers"})," in the ",(0,d.jsx)(t.code,{children:"yaml"})," file. If the ",(0,d.jsx)(t.code,{children:"name"})," value is not configured after ",(0,d.jsx)(t.code,{children:"servers"}),", the ",(0,d.jsx)(t.code,{children:"ip"})," value is used. It must be the name of a node of the specified component."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--user"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"root"}),(0,d.jsx)(t.td,{children:"The username for running the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--password"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The password for running the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-t/--tenant"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The tenant name used to perform the test. You need ensure this tenant has been created."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--database"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The database for performing the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--obclient-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"obclient"}),(0,d.jsx)(t.td,{children:"The path of the OBClient binary file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--sysbench-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"sysbench"}),(0,d.jsx)(t.td,{children:"The path of the Sysbench binary file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--script-name"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"point_select.lua"}),(0,d.jsx)(t.td,{children:"The name of the Sysbench script to be run."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--sysbench-script-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"/usr/sysbench/share/sysbench"}),(0,d.jsx)(t.td,{children:"The directory that stores the Sysbench script."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--tables"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"30"}),(0,d.jsx)(t.td,{children:"The number of tables to be initialized."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--table-size"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"20000"}),(0,d.jsx)(t.td,{children:"The data size of each table to be initialized."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--threads"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"16"}),(0,d.jsx)(t.td,{children:"The number of threads to be started."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--time"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"60"}),(0,d.jsx)(t.td,{children:"Test execution time in seconds. When this option is set to 0, the running duration is not limited."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--interval"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"10"}),(0,d.jsxs)(t.td,{children:["The logging interval, in seconds. Disables intermediate reports When this option is set to ",(0,d.jsx)(t.code,{children:"0"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--mysql-ignore-errors"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"String"}),(0,d.jsx)(t.td,{children:"1062"}),(0,d.jsxs)(t.td,{children:["The error code to be ignored. Separate multiple error codes with commas (",(0,d.jsx)(t.code,{children:","}),"). The value ",(0,d.jsx)(t.code,{children:"all"})," indicates to ignore all errors."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--events"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"0"}),(0,d.jsx)(t.td,{children:"The maximum number of requests. If this option is specified, the --time option is not needed."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--rand-type"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The random number generation function used for data access. Valid values: special, uniform, gaussian, and pareto.  Default value: special, early value: uniform."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"---skip-trx"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"Specifies whether to enable or disable a transaction in a read-only test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--percentile"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"Percentile to calculate in latency statistics. Value range: [1,100]. 0 means to disable percentile calculations."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-S/--skip-cluster-status-check"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Skip cluster status check when the option is true."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-O/--optimization"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"1"}),(0,d.jsxs)(t.td,{children:["The degree of auto-tuning. Valid values: ",(0,d.jsx)(t.code,{children:"0"}),", ",(0,d.jsx)(t.code,{children:"1"}),", and ",(0,d.jsx)(t.code,{children:"2"}),". ",(0,d.jsx)(t.code,{children:"0"})," indicates that auto-tuning is disabled. ",(0,d.jsx)(t.code,{children:"1"})," indicates that the auto-tuning parameters that take effect without a cluster restart are modified. ",(0,d.jsx)(t.code,{children:"2"})," indicates that all auto-tuning parameters are modified. If necessary, the cluster is restarted to make all parameters take effect."]})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"obd-test-tpch",children:"obd test tpch"}),"\n",(0,d.jsxs)(t.p,{children:["This section describes how to run the TPC-H test on the specified node of an OcecanBase cluster or ODP. To run the TPC-H test, you must install OBClient and obtpch.\nTPC-H needs to specify an OceanBase target server as the execution target. Before executing the TPC-H test, OBD will transfer the data files required for the test to the specified directory of the specified machine. Please make sure that you have enough disk space on this machine because these files may be relatively large.\nOf course, you can prepare the data files on the target machine in advance and then turn off the transfer by using the ",(0,d.jsx)(t.code,{children:"-dt/--disable-transfer"})," option."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-shell",children:"obd test tpch <deploy name> [flags]\r\n# example\r\nsudo yum install obtpch\r\nobd test tpch test --tenant=tpch -s 100 --remote-tbl-dir=/tmp/tpch100\n"})}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"deploy name"})," parameter specifies the name of the deployed cluster. You can consider it as an alias for the configuration file."]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Option"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Data type"}),(0,d.jsx)(t.th,{children:"Default value"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--component"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The name of the component to be tested. Valid values: ",(0,d.jsx)(t.code,{children:"oceanbase-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"})," and ",(0,d.jsx)(t.code,{children:"obproxy"}),". If you do not specify a value, the existence of ",(0,d.jsx)(t.code,{children:"obproxy"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"oceanbase-ce"})," is checked sequentially. The traversal stops when a component is found, and the component is then tested."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-server"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"The first node of the specified component."}),(0,d.jsxs)(t.td,{children:["Machine to be tested, followed by the ",(0,d.jsx)(t.code,{children:"name"})," value corresponding to ",(0,d.jsx)(t.code,{children:"servers"})," in the ",(0,d.jsx)(t.code,{children:"yaml"})," file. If the ",(0,d.jsx)(t.code,{children:"name"})," value is not configured after ",(0,d.jsx)(t.code,{children:"servers"}),", the ",(0,d.jsx)(t.code,{children:"ip"})," value is used. It must be the name of a node of the specified component."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--user"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"root"}),(0,d.jsx)(t.td,{children:"The username for running the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--password"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The password for running the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-t/--tenant"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The tenant name used to perform the test. You need ensure this tenant has been created."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--database"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The database for performing the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--obclient-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"obclient"}),(0,d.jsx)(t.td,{children:"The path of the OBClient binary file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--dbgen-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"/usr/tpc-h-tools/tpc-h-tools/bin/dbgen"}),(0,d.jsx)(t.td,{children:"The path of the dbgen binary file."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--dss-config"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"/usr/tpc-h-tools/tpc-h-tools/"}),(0,d.jsx)(t.td,{children:"The directory that stores the dists.dss files."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-s/--scale-factor"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"1"}),(0,d.jsx)(t.td,{children:"Automatically generate the scale of test data, the data is measured in Gigabytes."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--tmp-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./tmp"}),(0,d.jsx)(t.td,{children:"Temporary directory when executing tpch. When enabled, this option will automatically generate test data, auto-tuned SQL files, log files for executing test SQL, and so on."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--ddl-path"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The path or directory of the ddl file. If it is empty, OBD will use the ddl file that comes with it."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--tbl-path"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The path or directory of the tbl file. If it is empty, use dbgen to generate test data."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--sql-path"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The path or directory of the sql file. If it is empty, OBD will use the sql file that comes with it."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--remote-tbl-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The directory where the tbl is stored on the target observer, it is the absolute path. Please make sure that you have the read and write permissions to this directory when you start the server. This option is required when  ",(0,d.jsx)(t.code,{children:"--test-only"})," is not enabled."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-only"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"When you enable this option, initialization will not be done, only the test SQL is exectued."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--dt/--disable-transfer"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Disable transfer. When you enable this option, OBD will not transfer the local tbl to the remote remote-tbl-dir, and OBD will directly use the tbl file under the target machine remote-tbl-dir."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-S/--skip-cluster-status-check"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Skip cluster status check when the option is true."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-O/--optimization"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"1"}),(0,d.jsxs)(t.td,{children:["The degree of auto-tuning. Valid values: ",(0,d.jsx)(t.code,{children:"0"}),", ",(0,d.jsx)(t.code,{children:"1"}),", and ",(0,d.jsx)(t.code,{children:"2"}),". ",(0,d.jsx)(t.code,{children:"0"})," indicates that auto-tuning is disabled. ",(0,d.jsx)(t.code,{children:"1"})," indicates that the auto-tuning parameters that take effect without a cluster restart are modified. ",(0,d.jsx)(t.code,{children:"2"})," indicates that all auto-tuning parameters are modified. If necessary, the cluster is restarted to make all parameters take effect."]})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"obd-test-tpcc",children:"obd test tpcc"}),"\n",(0,d.jsx)(t.p,{children:"You can run this command to perform a TPC-C test on a specified node of an OceanBase cluster or an OceanBase Database Proxy (ODP) component."}),"\n",(0,d.jsx)(t.p,{children:"Make sure that you have installed OBClient and obtpcc, which are required to perform a TPC-C test."}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-shell",children:"obd test tpcc <deploy name> [flags]\r\n# example\r\nsudo yum install obtpcc java\r\nobd test tpcc test --tenant=tpcc --warehouses 10 --run-mins 1\n"})}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"deploy name"})," parameter specifies the name of the deployed cluster. You can consider it as an alias for the configuration file."]}),"\n",(0,d.jsx)(t.p,{children:"The following table describes details about the available options."}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Option"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Data type"}),(0,d.jsx)(t.th,{children:"Default value"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--component"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The name of the component to be tested. Valid values: ",(0,d.jsx)(t.code,{children:"oceanbase-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"})," and ",(0,d.jsx)(t.code,{children:"obproxy"}),". If you do not specify a value, the existence of ",(0,d.jsx)(t.code,{children:"obproxy"}),", ",(0,d.jsx)(t.code,{children:"obproxy-ce"}),", ",(0,d.jsx)(t.code,{children:"oceanbase"}),", ",(0,d.jsx)(t.code,{children:"oceanbase-ce"})," is checked sequentially. The traversal stops when a component is found, and the component is then tested."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-server"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"The name of the first node under the specified component."}),(0,d.jsxs)(t.td,{children:["Machine to be tested, followed by the ",(0,d.jsx)(t.code,{children:"name"})," value corresponding to ",(0,d.jsx)(t.code,{children:"servers"})," in the ",(0,d.jsx)(t.code,{children:"yaml"})," file. If the ",(0,d.jsx)(t.code,{children:"name"})," value is not configured after ",(0,d.jsx)(t.code,{children:"servers"}),", the ",(0,d.jsx)(t.code,{children:"ip"})," value is used. The name of the node to be tested under the specified component."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--user"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"root"}),(0,d.jsx)(t.td,{children:"The username used to perform the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--password"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The user password used to perform the test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-t/--tenant"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The tenant name used to perform the test. You need ensure this tenant has been created."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--database"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"test"}),(0,d.jsx)(t.td,{children:"The database where the test is to be performed."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--obclient-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"obclient"}),(0,d.jsx)(t.td,{children:"The path to the directory where the binary files of OBClient are stored."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--java-bin"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"java"}),(0,d.jsx)(t.td,{children:"The path to the directory where the Java binary files are stored."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--tmp-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"./tmp"}),(0,d.jsx)(t.td,{children:"The temporary directory to be used for the TPC-C test. Automatically generated configuration files, auto-tuned SQL files, and test output files will be stored in this directory."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--bmsql-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The installation directory of BenchmarkSQL. You need to specify this option only if you manually compile and install BenchmarkSQL. If you use obtpcc, this option is not required."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--bmsql-jar"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["The path to the directory where the JAR file of BenchmarkSQL is stored. If you do not specify the path, and the BenchmarkSQL directory is not specified, the default installation directory generated by obtpcc is used. If the BenchmarkSQL directory is specified, the JAR file in the ",(0,d.jsx)(t.code,{children:"<bmsql-dir>/dist"})," directory is used."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--bmsql-libs"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsxs)(t.td,{children:["If the BenchmarkSQL directory is specified, the JAR files in the ",(0,d.jsx)(t.code,{children:"<bmsql-dir>/lib"})," and ",(0,d.jsx)(t.code,{children:"<bmsql-dir>/lib/oceanbase"})," directories are used. If you use obtpcc, this option is not required."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--bmsql-sql-dir"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The path to the directory where the SQL files for the TPC-C test are stored. If you do not specify the path, OceanBase Deployer (OBD) uses the SQL files that are automatically generated."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--warehouses"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"10"}),(0,d.jsx)(t.td,{children:"The number of warehouses for the TPC-C test data set. If you do not specify a value, the assigned value is 20 times the number of CPU cores allocated to the OceanBase cluster."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--load-workers"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The number of concurrent worker threads for building the test data set. If you do not specify a value, the number of CPU cores per server or the size of tenant memory (GB)/2, whichever is smaller, is used."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--terminals"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"Empty"}),(0,d.jsx)(t.td,{children:"The number of virtual terminals to be used for the TPC-C test. If you do not specify a value, the number of CPU cores for the OceanBase cluster \xd7 15 or the number of warehouses \xd7 10, whichever is smaller, is used."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--run-mins"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"10"}),(0,d.jsx)(t.td,{children:"The amount of time allocated for the execution of the TPC-C test."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"--test-only"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Specifies that the test is performed without data construction."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-S/--skip-cluster-status-check"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"false"}),(0,d.jsx)(t.td,{children:"Skip cluster status check when the option is true."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"-O/--optimization"}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"int"}),(0,d.jsx)(t.td,{children:"1"}),(0,d.jsxs)(t.td,{children:["The degree of auto-tuning. Valid values: ",(0,d.jsx)(t.code,{children:"0"}),", ",(0,d.jsx)(t.code,{children:"1"}),", and ",(0,d.jsx)(t.code,{children:"2"}),". ",(0,d.jsx)(t.code,{children:"0"})," indicates that auto-tuning is disabled. ",(0,d.jsx)(t.code,{children:"1"})," indicates that the auto-tuning parameters that take effect without a cluster restart are modified. ",(0,d.jsx)(t.code,{children:"2"})," indicates that all auto-tuning parameters are modified. If necessary, the cluster is restarted to make all parameters take effect."]})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>c});var d=s(96540);const i={},r=d.createContext(i);function n(e){const t=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),d.createElement(r.Provider,{value:t},e.children)}}}]);