"use strict";(self.webpackChunkmy_docs_website=self.webpackChunkmy_docs_website||[]).push([[6207],{25994:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>l,frontMatter:()=>_,metadata:()=>o,toc:()=>d});var a=t(74848),i=t(28453);const _={title:"Tenant Management",weight:3},s=void 0,o={id:"user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/tenant_management",title:"Tenant Management",description:"View the Basic Information of Tenants",source:"@site/docs/user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/03_tenant_management.md",sourceDirName:"user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql",slug:"/user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/tenant_management",permalink:"/docs/user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/tenant_management",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/oceanbase.github.io/tree/main/docs/user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/03_tenant_management.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Tenant Management",weight:3},sidebar:"operation_and_maintenanceEnglishSidebar",previous:{title:"Cluster O&M",permalink:"/docs/user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/cluster_operations"},next:{title:"User and Privilege Management",permalink:"/docs/user_manual/operation_and_maintenance/en-US/operations_and_maintenance/commonly_used_sql/user_and_privilege_management"}},r={},d=[{value:"View the Basic Information of Tenants",id:"view-the-basic-information-of-tenants",level:2},{value:"Query Unit Configs",id:"query-unit-configs",level:2},{value:"Query Resource Pools",id:"query-resource-pools",level:2},{value:"Query Units",id:"query-units",level:2},{value:"Query the Disk Usage Information of Tenants",id:"query-the-disk-usage-information-of-tenants",level:2},{value:"Query the Data Amount of a Tenant",id:"query-the-data-amount-of-a-tenant",level:2},{value:"Query the Table Size Statistics of a Tenant",id:"query-the-table-size-statistics-of-a-tenant",level:2},{value:"Query the Distribution of Partitions or Leaders in a Tenant",id:"query-the-distribution-of-partitions-or-leaders-in-a-tenant",level:2},{value:"Query Databases in MySQL Mode",id:"query-databases-in-mysql-mode",level:2},{value:"Query the Total Number of Tables in Tenants",id:"query-the-total-number-of-tables-in-tenants",level:2}];function c(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{id:"view-the-basic-information-of-tenants",children:"View the Basic Information of Tenants"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  tenant_id,\n  tenant_name,\n  tenant_type,\n  primary_zone,\n  locality,\n  compatibility_mode,\n  status,\n  0 AS locked,\n  in_recyclebin,\n  timestampdiff(\n    second,\n    create_time,\n    now()\n  ) AS exist_seconds\nFROM\n  dba_ob_tenants\nWHERE\n  tenant_type IN ('SYS', 'USER');\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-unit-configs",children:"Query Unit Configs"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  unit_config_id,\n  name,\n  max_cpu,\n  min_cpu,\n  round(memory_size / 1024 / 1024 / 1024) max_memory_size_gb,\n  round(memory_size / 1024 / 1024 / 1024) min_memory_size_gb,\n  round(log_disk_size / 1024 / 1024 / 1024) log_disk_size_gb,\n  max_iops,\n  min_iops,\n  iops_weight\nFROM\n  dba_ob_unit_configs\nORDER BY\n  unit_config_id;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-resource-pools",children:"Query Resource Pools"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  p.tenant_id,\n  u.svr_ip,\n  uc.name,\n  uc.max_cpu,\n  uc.min_cpu,\n  round(uc.memory_size / 1024 / 1024 / 1024) AS max_memory_gb,\n  round(uc.log_disk_size / 1024 / 1024 / 1024) AS log_disk_size_gb,\n  uc.max_iops,\n  uc.min_iops\nFROM\n  dba_ob_resource_pools p,\n  dba_ob_unit_configs uc,\n  dba_ob_units u\nWHERE\n  p.unit_config_id = uc.unit_config_id\n  AND u.resource_pool_id = p.resource_pool_id\nORDER BY\n  p.tenant_id,\n  u.svr_ip,\n  uc.name;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-units",children:"Query Units"}),"\n",(0,a.jsxs)(e.p,{children:["Execute the following SQL statement to query the information as the ",(0,a.jsx)(e.code,{children:"root@sys"})," user:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  tenant_id,\n  svr_ip,\n  svr_port,\n  unit_id,\n  status,\n  create_time,\n  modify_time,\n  zone,\n  unit_config_id,\n  max_cpu,\n  min_cpu,\n  round(memory_size / 1024 / 1024 / 1024) memory_size_gb,\n  round(log_disk_size / 1024 / 1024 / 1024) log_disk_size_gb,\n  max_iops,\n  min_iops\nFROM\n  dba_ob_units\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  unit_id;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-the-disk-usage-information-of-tenants",children:"Query the Disk Usage Information of Tenants"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  t1.unit_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t3.tenant_id,\n  t3.tenant_name,\n  round(t1.log_disk_size / 1024 / 1024 / 1024) AS log_disk_size_gb,\n  round(t1.log_disk_in_use / 1024 / 1024 / 1024) AS log_disk_in_use_gb,\n  round(t1.data_disk_in_use / 1024 / 1024 / 1024) AS data_disk_in_use_gb\nFROM\n  (\n    SELECT\n      unit_id,\n      svr_ip,\n      svr_port,\n      SUM(log_disk_size) AS log_disk_size,\n      SUM(log_disk_in_use) AS log_disk_in_use,\n      SUM(data_disk_in_use) AS data_disk_in_use\n    FROM\n      gv$ob_units\n    GROUP BY\n      unit_id,\n      svr_ip,\n      svr_port\n  ) t1\n  JOIN dba_ob_units t2 ON t1.unit_id = t2.unit_id\n  AND t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\n  JOIN (\n    SELECT\n      tenant_id,\n      tenant_name\n    FROM\n      dba_ob_tenants\n    WHERE\n      tenant_type IN ('SYS', 'USER')\n  ) t3 ON t2.tenant_id = t3.tenant_id\nORDER BY\n  t3.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t1.unit_id;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-the-data-amount-of-a-tenant",children:"Query the Data Amount of a Tenant"}),"\n",(0,a.jsxs)(e.p,{children:["Execute the following SQL statement to query the information as the ",(0,a.jsx)(e.code,{children:"root@sys"})," user:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(data_size) / 1024 / 1024) data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) required_size_mb\nFROM\n  cdb_ob_tablet_replicas\nWHERE\n  tenant_id = 1002\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following SQL statement in a user tenant:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  svr_ip,\n  svr_port,\n  round(SUM(data_size) / 1024 / 1024) data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) required_size_mb\nFROM\n  dba_ob_tablet_replicas\nGROUP BY\n  svr_ip,\n  svr_port\nORDER BY\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-the-table-size-statistics-of-a-tenant",children:"Query the Table Size Statistics of a Tenant"}),"\n",(0,a.jsxs)(e.p,{children:["Execute the following SQL statement to query the information as the ",(0,a.jsx)(e.code,{children:"root@sys"})," user."]}),"\n",(0,a.jsx)(e.p,{children:"We recommend that you specify the tenant ID and other parameters to improve query performance."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  c.object_type,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  cdb_ob_table_locations a\n  JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      cdb_ob_tablet_replicas\n  ) b ON a.tenant_id = b.tenant_id\n   AND a.tenant_id = 1002\n--   AND a.database_name = 'ALVIN'\n  AND a.tablet_id = b.tablet_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN cdb_objects c ON a.tenant_id = c.con_id\n  AND a.table_id = c.object_id\n  AND c.object_type = 'TABLE'\n--   AND c.object_name = 'test'\nGROUP BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  c.object_type\nORDER BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port;\n"})}),"\n",(0,a.jsx)(e.p,{children:"If the performance of the preceding query is poor, execute the following SQL statement with the specified tenant ID to query the statistics. The performance of this query is more than 10 times faster."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  cdb_ob_table_locations a\n  JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      __all_virtual_tablet_meta_table\n  ) b ON a.tenant_id = b.tenant_id\n  AND a.tenant_id = 1002\n  AND a.tablet_id = b.tablet_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN __all_virtual_table c ON a.tenant_id = c.tenant_id\n  AND a.table_id = c.table_id\nGROUP BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port\nORDER BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following statement with the specified tenant ID and database name to query the statistics sorted by table size:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  c.object_type,\n  c.object_name,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  cdb_ob_table_locations a\n  JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      cdb_ob_tablet_replicas\n  ) b ON a.tenant_id = b.tenant_id\n  AND a.tenant_id = 1012\n  AND a.database_name = 'ALVIN'\n  AND a.tablet_id = b.tablet_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN cdb_objects c ON a.tenant_id = c.con_id\n  AND a.table_id = c.object_id\n  AND c.object_type = 'TABLE'\n--   AND c.object_name = 'test'\nGROUP BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  c.object_type,\n  c.object_name\nORDER BY\n  required_size_mb DESC\nLIMIT\n  100;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following SQL statement in a user tenant:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.svr_ip,\n  a.svr_port,\n  a.database_name,\n  c.object_type,\n  c.object_name,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  dba_ob_table_locations a\n  JOIN (\n    SELECT\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      dba_ob_tablet_replicas\n  ) b ON a.tablet_id = b.tablet_id\n  AND a.database_name = 'SYS'\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN dba_objects c ON a.table_id = c.object_id\n  AND c.object_type = 'TABLE'\n  AND c.object_name = 'TEST'\nGROUP BY\n  a.svr_ip,\n  a.svr_port,\n  a.database_name,\n  c.object_type,\n  c.object_name\nORDER BY\n  required_size_mb DESC;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-the-distribution-of-partitions-or-leaders-in-a-tenant",children:"Query the Distribution of Partitions or Leaders in a Tenant"}),"\n",(0,a.jsxs)(e.p,{children:["Execute the following SQL statement to query the information as the ",(0,a.jsx)(e.code,{children:"root@sys"})," user:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  zone,\n  svr_ip,\n  role,\n  COUNT(1) cnt\nFROM\n  cdb_ob_table_locations\nWHERE\n  tenant_id = 1012\nGROUP BY\n  svr_ip,\n  role\nORDER BY\n  1,\n  3 DESC;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following SQL statement with the specified tenant ID, database name, and object name to query leaders:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  *\nFROM\n  cdb_ob_table_locations a\nWHERE\n  a.tenant_id = 1012\n  AND a.database_name = 'ALVIN'\n  AND (a.tenant_id, a.table_id) IN (\n    SELECT\n      c.con_id,\n      c.object_id\n    FROM\n      cdb_objects c\n    WHERE\n      c.con_id = a.tenant_id\n      AND c.object_type = 'TABLE'\n      AND c.object_name = 'test'\n  )\nLIMIT\n  100;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following SQL statement with the specified tenant ID, database name, and object name to query tablet replicas:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  *\nFROM\n  cdb_ob_tablet_replicas r\nWHERE\n  (r.tenant_id, r.tablet_id) IN (\n    SELECT\n      a.tenant_id,\n      a.tablet_id\n    FROM\n      cdb_ob_table_locations a\n    WHERE\n      a.tenant_id = 1012\n      AND a.database_name = 'ALVIN'\n      AND (a.tenant_id, a.table_id) IN (\n        SELECT\n          c.con_id,\n          c.object_id\n        FROM\n          cdb_objects c\n        WHERE\n          c.con_id = a.tenant_id\n          AND c.object_type = 'TABLE'\n          AND c.object_name = 'test'\n      )\n  )\nLIMIT\n  100;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-databases-in-mysql-mode",children:"Query Databases in MySQL Mode"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  o.created AS gmt_create,\n  o.object_id AS database_id,\n  d.database_name,\n  c.id AS collation_type,\n  c.character_set_name,\n  c.collation_name,\n  NULL AS primary_zone,\n  0 AS read_only\nFROM\n  dba_ob_databases d\n  JOIN dba_objects o ON o.object_type = 'DATABASE'\n  JOIN information_schema.collations c ON d.database_name = o.object_name\n  AND d.collation = c.collation_name;\n"})}),"\n",(0,a.jsx)(e.h2,{id:"query-the-total-number-of-tables-in-tenants",children:"Query the Total Number of Tables in Tenants"}),"\n",(0,a.jsxs)(e.p,{children:["Execute the following statement to query the total number of tables, except those in the ",(0,a.jsx)(e.code,{children:"oceanbase"})," and ",(0,a.jsx)(e.code,{children:"mysql"})," databases, in non-meta tenants:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT QUERY_TIMEOUT(100000000) */\n  t.tenant_id,\n  c.owner,\n  COUNT(*) AS cnt\nFROM\n  cdb_tables c\n  JOIN dba_ob_tenants t ON c.con_id = t.tenant_id\n  AND tenant_type IN ('SYS', 'USER')\n  AND c.owner NOT IN ('oceanbase', 'mysql')\nGROUP BY\n  t.tenant_id,\n  c.owner\nORDER BY\n  t.tenant_id,\n  c.owner;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following statement to query the total number of tables in non-meta tenants:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT QUERY_TIMEOUT(100000000) */\n  t.tenant_id,\n  COUNT(*) AS cnt\nFROM\n  cdb_tables c\n  JOIN dba_ob_tenants t ON c.con_id = t.tenant_id\n  AND tenant_type IN ('SYS', 'USER')\nGROUP BY\n  t.tenant_id\nORDER BY\n  t.tenant_id;\n"})}),"\n",(0,a.jsx)(e.p,{children:"Execute the following statement to query the total number of tables in all tenants:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT QUERY_TIMEOUT(100000000) */\n  con_id tenant_id,\n  COUNT(*) AS cnt\nFROM\n  cdb_tables\nGROUP BY\n  con_id\nORDER BY\n  con_id;\n"})})]})}function l(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>o});var a=t(96540);const i={},_=a.createContext(i);function s(n){const e=a.useContext(_);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),a.createElement(_.Provider,{value:e},n.children)}}}]);