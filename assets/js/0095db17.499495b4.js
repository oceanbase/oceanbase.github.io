"use strict";(self.webpackChunkmy_docs_website=self.webpackChunkmy_docs_website||[]).push([[5723],{74810:(n,e,_)=>{_.r(e),_.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var t=_(74848),a=_(28453);const i={title:"OCP \u4e2d\u4f7f\u7528\u7684\u8fd0\u7ef4 SQL",weight:9},s=void 0,r={id:"user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql/ocp_monitor_ob",title:"OCP \u4e2d\u4f7f\u7528\u7684\u8fd0\u7ef4 SQL",description:"\u56e0\u4e3a\u6709\u4e00\u90e8\u5206\u7528\u6237\u5e0c\u671b\u6211\u4eec\u80fd\u591f\u5728\u6559\u7a0b\u4e2d\u589e\u52a0\u4e00\u4e9b\u8fd0\u7ef4\u5e38\u7528\u7684 SQL \u6216\u8005\u547d\u4ee4\uff0c\u7528\u4e8e\u66ff\u6362 OCP \u5de5\u5177\u7684\u90e8\u5206\u529f\u80fd\uff0c\u4ee5\u4fbf\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e2d\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u8fd0\u7ef4\u64cd\u4f5c\u3002",source:"@site/docs/user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql/09_ocp_monitor_ob.md",sourceDirName:"user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql",slug:"/user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql/ocp_monitor_ob",permalink:"/docs/user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql/ocp_monitor_ob",draft:!1,unlisted:!1,editUrl:"https://github.com/oceanbase/oceanbase.github.io/tree/main/docs/user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql/09_ocp_monitor_ob.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"OCP \u4e2d\u4f7f\u7528\u7684\u8fd0\u7ef4 SQL",weight:9},sidebar:"operation_and_maintenanceSidebar",previous:{title:"SQL_Audit",permalink:"/docs/user_manual/operation_and_maintenance/operations_and_maintenance/commonly_used_sql/sql_audit"},next:{title:"\u53c2\u6570\u6a21\u677f",permalink:"/docs/user_manual/operation_and_maintenance/scenario_best_practices/parameter_templates"}},d={},o=[{value:"ob_role",id:"ob_role",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x",level:3},{value:"ob_server",id:"ob_server",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-1",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-1",level:3},{value:"ob_cache",id:"ob_cache",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-2",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-2",level:3},{value:"ob_sysstat",id:"ob_sysstat",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-3",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-3",level:3},{value:"ob_disk",id:"ob_disk",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-4",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-4",level:3},{value:"ob_server_resource",id:"ob_server_resource",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-5",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-5",level:3},{value:"ob_table",id:"ob_table",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-6",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-6",level:3},{value:"ob_session",id:"ob_session",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-7",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-7",level:3},{value:"ob_plan_cache",id:"ob_plan_cache",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-8",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-8",level:3},{value:"ob_waitevent",id:"ob_waitevent",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-9",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-9",level:3},{value:"ob_system_event",id:"ob_system_event",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-10",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-10",level:3},{value:"ob_tenant_memstore",id:"ob_tenant_memstore",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-11",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-11",level:3},{value:"ob_unit",id:"ob_unit",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-12",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-12",level:3},{value:"ob_tenant_resource",id:"ob_tenant_resource",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-13",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-13",level:3},{value:"ob_tenant_assigned",id:"ob_tenant_assigned",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-14",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-14",level:3},{value:"ob_tenant_disk",id:"ob_tenant_disk",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-15",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-15",level:3},{value:"ob_tenant_task",id:"ob_tenant_task",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-16",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-16",level:3},{value:"ob_server_task",id:"ob_server_task",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-17",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-17",level:3},{value:"ob_memtable",id:"ob_memtable",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-18",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-18",level:3},{value:"ob_clog",id:"ob_clog",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-19",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-19",level:3},{value:"ob_index",id:"ob_index",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-20",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-20",level:3},{value:"ob_memstore",id:"ob_memstore",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-21",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-21",level:3},{value:"ob_compaction",id:"ob_compaction",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-22",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-22",level:3},{value:"ob_tenant500_memory",id:"ob_tenant500_memory",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-23",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-23",level:3},{value:"ob_tenant_memory",id:"ob_tenant_memory",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-24",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-24",level:3},{value:"ob_unit_config",id:"ob_unit_config",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-25",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-25",level:3},{value:"ob_tenant_log_disk",id:"ob_tenant_log_disk",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-26",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-26",level:3},{value:"ob_system_event_detail",id:"ob_system_event_detail",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-27",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-27",level:3},{value:"ob_latch",id:"ob_latch",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-28",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-28",level:3},{value:"ob_tenant_server",id:"ob_tenant_server",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-29",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-29",level:3},{value:"ob_tenant_server_data_index",id:"ob_tenant_server_data_index",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-30",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-30",level:3},{value:"ob_tenant_unit",id:"ob_tenant_unit",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-31",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-31",level:3},{value:"ob_server_partition_replica",id:"ob_server_partition_replica",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-32",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-32",level:3},{value:"ob_server_partition",id:"ob_server_partition",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-33",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-33",level:3},{value:"ob_tenant_context_memory",id:"ob_tenant_context_memory",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-34",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-34",level:3},{value:"log_stream",id:"log_stream",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-35",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-35",level:3},{value:"ob_database_disk",id:"ob_database_disk",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-36",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-36",level:3},{value:"tenant",id:"tenant",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-37",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-37",level:3},{value:"unit",id:"unit",level:2},{value:"OceanBase 3.x",id:"oceanbase-3x-38",level:3},{value:"OceanBase 4.x",id:"oceanbase-4x-38",level:3}];function c(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"\u56e0\u4e3a\u6709\u4e00\u90e8\u5206\u7528\u6237\u5e0c\u671b\u6211\u4eec\u80fd\u591f\u5728\u6559\u7a0b\u4e2d\u589e\u52a0\u4e00\u4e9b\u8fd0\u7ef4\u5e38\u7528\u7684 SQL \u6216\u8005\u547d\u4ee4\uff0c\u7528\u4e8e\u66ff\u6362 OCP \u5de5\u5177\u7684\u90e8\u5206\u529f\u80fd\uff0c\u4ee5\u4fbf\u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e2d\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u8fd0\u7ef4\u64cd\u4f5c\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u6240\u4ee5\u5728\u672c\u5c0f\u8282\u4e2d\uff0c\u5bf9 3.x \u548c 4.x \u4e2d OCP \u5de5\u5177\u4e2d\u4f7f\u7528\u7684\u8fd0\u7ef4 SQL \u8fdb\u884c\u4e86\u6c47\u603b\u548c\u5c55\u793a\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002"}),"\n",(0,t.jsx)(e.h2,{id:"ob_role",children:"ob_role"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  with_rootserver,\n  *\nFROM\n  __all_server;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  with_rootserver,\n  *\nFROM\n  dba_ob_servers;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_server",children:"ob_server"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-1",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  status,\n  (\n    CASE\n    WHEN stop_time = 0 THEN 0\n    ELSE (time_to_usec(now()) - stop_time) / 1000000\n    END\n  ) AS stopped_duration_seconds\nFROM\n  __all_server;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  ifnull(group_concat(svr_ip SEPARATOR ','), '') AS servers,\n  'active' status,\n  COUNT(1) AS cnt\nFROM\n  __all_server\nWHERE\n  status = 'active'\nUNION ALL\nSELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  ifnull(group_concat(svr_ip SEPARATOR ','), '') AS servers,\n  'inactive' status,\n  COUNT(1) AS cnt\nFROM\n  __all_server\nWHERE\n  status = 'inactive';\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-1",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  status,\n  (\n    CASE\n    WHEN stop_time IS NULL THEN 0\n    ELSE timestampdiff(second, stop_time, current_timestamp)\n    END\n  ) AS stopped_duration_seconds\nFROM\n  dba_ob_servers;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  ifnull(group_concat(svr_ip SEPARATOR ','), '') AS servers,\n  'active' status,\n  COUNT(1) AS cnt\nFROM\n  dba_ob_servers\nWHERE\n  status = 'active'\nUNION ALL\nSELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  ifnull(group_concat(svr_ip SEPARATOR ','), '') AS servers,\n  'inactive' status,\n  COUNT(1) AS cnt\nFROM\n  dba_ob_servers\nWHERE\n  status = 'inactive';\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_cache",children:"ob_cache"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-2",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  cache_name,\n  round(cache_size / 1024 / 1024) cache_size_mb\nFROM\n  __all_virtual_kvcache_info\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  cache_name;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(cache_size) / 1024 / 1024) cache_size_mb\nFROM\n  __all_virtual_kvcache_info\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-2",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  cache_name,\n  round(cache_size / 1024 / 1024) cache_size_mb\nFROM\n  gv$ob_kvcache\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  cache_name;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n    tenant_id,\n    svr_ip,\n    svr_port,\n    round(SUM(cache_size) / 1024 / 1024) cache_size_mb\nFROM\n    gv$ob_kvcache\nGROUP BY\n    tenant_id,\n    svr_ip,\n    svr_port\nORDER BY\n    tenant_id,\n    svr_ip,\n    svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_sysstat",children:"ob_sysstat"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-3",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n    con_id tenant_id,\n    stat_id,\n    value\nFROM\n    v$sysstat\nWHERE\n    stat_id IN ( 10000, 10001, 10002, 10003, 10004,\n                 10005, 10006, 140002, 140003, 140005,\n                 140006, 140012, 140013, 40030, 80040,\n                 80041, 130000, 130001, 130002, 130004,\n                 20000, 20001, 20002, 30000, 30001,\n                 30002, 30005, 30006, 30007, 30008,\n                 30009, 30010, 30011, 30012, 30013,\n                 30080, 30081, 40000, 40001, 40002,\n                 40003, 40004, 40005, 40006, 40007,\n                 40008, 40009, 40010, 40011, 40012,\n                 40018, 40019, 40116, 40117, 40118,\n                 50000, 50001, 50002, 50004, 50005,\n                 50008, 50009, 50010, 50011, 50037,\n                 50038, 60000, 60001, 60002, 60003,\n                 60004, 60005, 60019, 60020, 60021,\n                 60022, 60023, 60024, 80057, 120000,\n                 120001, 120009, 120008 )\n    AND ( con_id > 1000\n          OR con_id = 1 )\n    AND class < 1000;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'SELECT /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n    con_id AS tenant_id,\n    stat_id,\n    value\nFROM\n    v$sysstat\nWHERE\n    stat_id IN ( 30066, 50003, 50021, 50022, 50030,\n                 50039, 50040, 60031, 60057, 80023,\n                 80025, 80026, 120002, 120005, 120006,\n                 200001, 200002 )\n    AND ( con_id > 1000\n          OR con_id = 1 )\nUNION ALL\nSELECT\n    con_id,\n    stat_id,\n    value\nFROM\n    v$sysstat\nWHERE\n    stat_id IN ( 80025, 80026, 80023 )\n    AND con_id > 1\n    AND con_id < 1001\n    AND value > 0\nUNION ALL\nSELECT\n    con_id AS tenant_id,\n    stat_id,\n    value\nFROM\n    v$sysstat\nWHERE\n        name = "memstore write lock wait timeout count"\n    AND ( con_id > 1000\n          OR con_id = 1 );\n'})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-3",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT /* MONITOR_AGENT */\n    con_id tenant_id,\n    stat_id,\n    value\nFROM\n    v$sysstat\nWHERE\n    stat_id IN ( 10000, 10001, 10002, 10003, 10004,\n                 10005, 10006, 140002, 140003, 140005,\n                 140006, 140012, 140013, 40030, 80040,\n                 80041, 130000, 130001, 130002, 130004,\n                 20000, 20001, 20002, 30000, 30001,\n                 30002, 30005, 30006, 30007, 30008,\n                 30009, 30010, 30011, 30012, 30013,\n                 30080, 30081, 30082, 30083, 30084,\n                 30085, 30086, 40000, 40001, 40002,\n                 40003, 40004, 40005, 40006, 40007,\n                 40008, 40009, 40010, 40011, 40012,\n                 40018, 40019, 40116, 40117, 40118,\n                 50000, 50001, 60087, 50004, 50005,\n                 50008, 50009, 50010, 50011, 50037,\n                 50038, 60000, 60001, 60002, 60003,\n                 60004, 60005, 60019, 60020, 60021,\n                 60022, 60023, 60024, 80001, 80002,\n                 80003, 80007, 80008, 80009, 80057,\n                 120000, 120001, 120009, 120008 )\n    AND ( con_id > 1000\n          OR con_id = 1 )\n    AND class < 1000;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4e0d\u542b META \u79df\u6237\u7684\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT /* MONITOR_AGENT */\n    tenant_id,\n    stat_id,\n    value\nFROM\n    v$sysstat,\n    dba_ob_tenants\nWHERE\n    stat_id IN ( 30066, 50003, 50021, 50022, 50030,\n                 50039, 50040, 60031, 60057, 60083,\n                 80023, 80025, 80026, 120002, 120005,\n                 120006, 200001, 200002 )\n    AND ( con_id > 1000\n          OR con_id = 1 )\n    AND dba_ob_tenants.tenant_id = v$sysstat.con_id\n    AND dba_ob_tenants.tenant_type <> 'META'\nUNION ALL\nSELECT\n    con_id AS tenant_id,\n    stat_id,\n    value\nFROM\n    v$sysstat\nWHERE\n    stat_id IN ( 80025, 80026, 80023 )\n    AND con_id > 1\n    AND con_id < 1001\n    AND value > 0;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_disk",children:"ob_disk"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-4",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  svr_ip,\n  svr_port,\n  round(total_size / 1024 / 1024 / 1024) total_size_gb,\n  round(free_size / 1024 / 1024 / 1024) free_size_gb\nFROM\n  __all_virtual_disk_stat\nORDER BY\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-4",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  svr_ip,\n  svr_port,\n  round(data_disk_capacity / 1024 / 1024 / 1024) data_disk_capacity_gb,\n  round((data_disk_capacity - data_disk_in_use) / 1024 / 1024 / 1024) data_disk_free_gb,\n  round(log_disk_capacity / 1024 / 1024 / 1024) log_disk_capacity_gb,\n  round(log_disk_assigned / 1024 / 1024 / 1024) log_disk_assigned_gb,\n  round(log_disk_in_use / 1024 / 1024 / 1024) log_disk_in_use_gb\nFROM\n  gv$ob_servers\nORDER BY\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_server_resource",children:"ob_server_resource"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-5",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  svr_ip,\n  svr_port,\n  cpu_total,\n  cpu_max_assigned AS cpu_assigned,\n  round(mem_total / 1024 / 1024 / 1024) mem_total_gb,\n  round(mem_max_assigned / 1024 / 1024 / 1024) mem_assigned_gb,\n  round(disk_total / 1024 / 1024 / 1024) disk_total_gb,\n  cpu_assigned_percent,\n  mem_assigned_percent\nFROM\n  __all_virtual_server_stat\nORDER BY\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-5",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  svr_ip,\n  svr_port,\n  cpu_capacity_max AS cpu_total,\n  cpu_assigned_max AS cpu_assigned,\n  round(mem_capacity / 1024 / 1024 / 1024) mem_total_gb,\n  round(mem_assigned / 1024 / 1024 / 1024) mem_assigned_gb,\n  round(data_disk_capacity / 1024 / 1024 / 1024) data_disk_capacity_gb,\n  (cpu_assigned_max / cpu_capacity_max) AS cpu_assigned_percent,\n  (mem_assigned / mem_capacity) AS mem_assigned_percent\nFROM\n  gv$ob_servers\nORDER BY\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_table",children:"ob_table"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-6",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(100000000) */\n  tenant_name,\n  tenant_id,\n  COUNT(*) AS cnt\nFROM\n  gv$table\nGROUP BY\n  tenant_id;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-6",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT QUERY_TIMEOUT(100000000) */\n  con_id tenant_id,\n  COUNT(*) AS cnt\nFROM\n  cdb_tables\nGROUP BY\n  con_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_session",children:"ob_session"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-7",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t2.svr_ip,\n  t2.svr_port,\n  t1.tenant_name,\n  coalesce(t2.active_cnt, 0) AS active_cnt,\n  coalesce(t2.all_cnt, 0) AS all_cnt\nFROM\n  (\n    SELECT\n      tenant_name\n    FROM\n      v$unit\n  ) t1\n  LEFT JOIN (\n    SELECT\n      count(\n        `state` = 'ACTIVE'\n        OR NULL\n      ) AS active_cnt,\n      COUNT(1) AS all_cnt,\n      tenant AS tenant_name,\n      svr_ip,\n      svr_port\n    FROM\n      __all_virtual_processlist\n    GROUP BY\n      tenant,\n      svr_ip,\n      svr_port\n  ) t2 ON t1.tenant_name = t2.tenant_name;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-7",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t2.svr_ip,\n  t2.svr_port,\n  t1.tenant_name,\n  coalesce(t2.active_cnt, 0) AS active_cnt,\n  coalesce(t2.all_cnt, 0) AS all_cnt\nFROM\n  (\n    SELECT\n      tenant_name\n    FROM\n      dba_ob_tenants\n    WHERE\n      tenant_type <> 'META'\n  ) t1\n  LEFT JOIN (\n    SELECT\n      count(\n        `state` = 'ACTIVE'\n        OR NULL\n      ) AS active_cnt,\n      COUNT(1) AS all_cnt,\n      tenant AS tenant_name,\n      svr_ip,\n      svr_port\n    FROM\n      v$ob_processlist\n    GROUP BY\n      tenant,\n      svr_ip,\n      svr_port\n  ) t2 ON t1.tenant_name = t2.tenant_name;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_plan_cache",children:"ob_plan_cache"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-8",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  mem_used,\n  access_count,\n  hit_count\nFROM\n  v$plan_cache_stat;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-8",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  tenant_id,\n  mem_used,\n  access_count,\n  hit_count\nFROM\n  v$ob_plan_cache_stat;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_waitevent",children:"ob_waitevent"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-9",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  con_id tenant_id,\n  SUM(total_waits) AS total_waits,\n  SUM(time_waited_micro) / 1000000 AS time_waited\nFROM\n  v$system_event\nWHERE\n  v$system_event.wait_class <> 'IDLE'\n  AND (\n    con_id > 1000\n    OR con_id = 1\n  )\nGROUP BY\n  tenant_id;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-9",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  con_id tenant_id,\n  SUM(total_waits) AS total_waits,\n  SUM(time_waited_micro) / 1000000 AS time_waited\nFROM\n  v$system_event\nWHERE\n  v$system_event.wait_class <> 'IDLE'\n  AND (\n    con_id > 1000\n    OR con_id = 1\n  )\nGROUP BY\n  tenant_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_system_event",children:"ob_system_event"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-10",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  con_id tenant_id,\n  CASE\n  WHEN event_id = 10000 THEN 'INTERNAL'\n  WHEN event_id = 13000 THEN 'SYNC_RPC'\n  WHEN event_id = 14003 THEN 'ROW_LOCK_WAIT'\n  WHEN (\n    event_id >= 10001\n    AND event_id <= 11006\n  )\n  OR (\n    event_id >= 11008\n    AND event_id <= 11011\n  ) THEN 'IO'\n  WHEN event LIKE 'latch:%' THEN 'LATCH'\n  ELSE 'OTHER'\nEND\n  event_group,\n  SUM(total_waits) AS total_waits,\n  SUM(time_waited_micro / 1000000) AS time_waited\nFROM\n  v$system_event\nWHERE\n  v$system_event.wait_class <> 'IDLE'\n  AND (\n    con_id > 1000\n    OR con_id = 1\n  )\nGROUP BY\n  tenant_id,\n  event_group;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-10",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  con_id tenant_id,\n  CASE\n  WHEN event_id = 10000 THEN 'INTERNAL'\n  WHEN event_id = 13000 THEN 'SYNC_RPC'\n  WHEN event_id = 14003 THEN 'ROW_LOCK_WAIT'\n  WHEN (\n    event_id >= 10001\n    AND event_id <= 11006\n  )\n  OR (\n    event_id >= 11008\n    AND event_id <= 11011\n  ) THEN 'IO'\n  WHEN event LIKE 'latch:%' THEN 'LATCH'\n  ELSE 'OTHER'\nEND\n  event_group,\n  SUM(total_waits) AS total_waits,\n  SUM(time_waited_micro / 1000000) AS time_waited\nFROM\n  v$system_event\nWHERE\n  v$system_event.wait_class <> 'IDLE'\n  AND (\n    con_id > 1000\n    OR con_id = 1\n  )\nGROUP BY\n  tenant_id,\n  event_group;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_memstore",children:"ob_tenant_memstore"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-11",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK),query_timeout(100000000) */\n  t.tenant_id,\n  t.tenant_name,\n  MAX(m.freeze_cnt) AS freeze_cnt,\n  s.value AS minor_freeze_times,\n  round(100 * MAX(m.freeze_cnt) / s.value, 2) AS compact_trigger_ratio\nFROM\n  gv$memstore m\n  JOIN __all_tenant t ON m.tenant_id = t.tenant_id\n  JOIN __all_virtual_sys_parameter_stat s ON s.name = 'minor_freeze_times'\nWHERE\n  t.tenant_id > 1000\nGROUP BY\n  m.tenant_id;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-11",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK),query_timeout(100000000) */\n  t.tenant_id,\n  t.tenant_name,\n  MAX(m.freeze_cnt) AS freeze_cnt,\n  s.value AS minor_freeze_times,\n  round(100 * MAX(m.freeze_cnt) / s.value, 2) AS compact_trigger_ratio\nFROM\n  gv$ob_memstore m\n  JOIN dba_ob_tenants t ON m.tenant_id = t.tenant_id\n  JOIN gv$ob_parameters s ON s.name = 'major_compact_trigger'\n  AND s.tenant_id = t.tenant_id\nWHERE\n  t.tenant_id > 1000\n  AND t.tenant_type <> 'meta'\nGROUP BY\n  m.tenant_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_unit",children:"ob_unit"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-12",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  unit_id,\n  unit_config_id,\n  unit_config_name,\n  resource_pool_id,\n  resource_pool_name,\n  zone,\n  tenant_id,\n  tenant_name,\n  svr_ip,\n  svr_port,\n  migrate_from_svr_ip,\n  migrate_from_svr_port,\n  max_cpu,\n  min_cpu,\n  round(max_memory / 1024 / 1024 / 1024) max_memory_gb,\n  round(min_memory / 1024 / 1024 / 1024) min_memory_gb,\n  max_iops,\n  min_iops,\n  round(max_disk_size / 1024 / 1024 / 1024) max_disk_size_gb,\n  max_session_num\nFROM\n  v$unit\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  unit_id;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-12",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  svr_ip,\n  svr_port,\n  unit_id,\n  tenant_id,\n  zone,\n  zone_type,\n  region,\n  max_cpu,\n  min_cpu,\n  round(memory_size / 1024 / 1024 / 1024) memory_size_gb,\n  max_iops,\n  min_iops,\n  iops_weight,\n  round(log_disk_size / 1024 / 1024 / 1024) log_disk_size_gb,\n  round(log_disk_in_use / 1024 / 1024 / 1024) log_disk_in_use_gb,\n  round(data_disk_in_use / 1024 / 1024 / 1024) data_disk_in_use_gb,\n  status,\n  create_time\nFROM\n  gv$ob_units\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  unit_id;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  unit_id,\n  tenant_id,\n  status,\n  resource_pool_id,\n  unit_group_id,\n  create_time,\n  modify_time,\n  zone,\n  svr_ip,\n  svr_port,\n  migrate_from_svr_ip,\n  migrate_from_svr_port,\n  manual_migrate,\n  unit_config_id,\n  max_cpu,\n  min_cpu,\n  round(memory_size / 1024 / 1024 / 1024) memory_size_gb,\n  round(log_disk_size / 1024 / 1024 / 1024) log_disk_size_gb,\n  max_iops,\n  min_iops,\n  iops_weight\nFROM\n  dba_ob_units\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  unit_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_resource",children:"ob_tenant_resource"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-13",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+read_consistency(weak) */\n  coalesce(tenant_id, - 1) AS tenant_id,\n  tenant_name,\n  SUM(max_cpu) AS max_cpu,\n  SUM(min_cpu) AS min_cpu,\n  round(SUM(max_memory) / 1024 / 1024 / 1024) max_memory_gb,\n  round(SUM(min_memory) / 1024 / 1024 / 1024) min_memory_gb\nFROM\n  v$unit\nGROUP BY\n  tenant_id;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-13",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  coalesce(t1.tenant_id, - 1) AS tenant_id,\n  tenant_name,\n  svr_ip,\n  svr_port,\n  SUM(max_cpu) AS max_cpu,\n  SUM(min_cpu) AS min_cpu,\n  round(SUM(max_memory) / 1024 / 1024 / 1024) max_memory_gb,\n  round(SUM(min_memory) / 1024 / 1024 / 1024) min_memory_gb\nFROM\n  (\n    SELECT\n      t1.unit_id,\n      t1.svr_ip,\n      t1.svr_port,\n      t2.tenant_id,\n      t1.min_cpu,\n      t1.max_cpu,\n      t1.min_memory,\n      t1.max_memory\n    FROM\n      (\n        SELECT\n          unit_id,\n          svr_ip,\n          svr_port,\n          SUM(min_cpu) AS min_cpu,\n          SUM(max_cpu) AS max_cpu,\n          SUM(memory_size) AS min_memory,\n          SUM(memory_size) AS max_memory\n        FROM\n          gv$ob_units\n        GROUP BY\n          unit_id,\n      svr_ip,\n      svr_port\n      ) t1\n      JOIN dba_ob_units t2 ON t1.unit_id = t2.unit_id\n  ) t1\n  JOIN dba_ob_tenants t2 ON t1.tenant_id = t2.tenant_id\nWHERE\n  tenant_type <> 'meta'\nGROUP BY\n  tenant_id\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_assigned",children:"ob_tenant_assigned"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-14",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t2.tenant_id,\n  t2.tenant_name,\n  t1.svr_ip,\n  t1.svr_port,\n  t1.cpu_total,\n  t1.cpu_max_assigned AS cpu_assigned,\n  round(t1.mem_total / 1024 / 1024 / 1024) mem_total_gb,\n  round(t1.mem_max_assigned / 1024 / 1024 / 1024) mem_assigned_gb\nFROM\n  __all_virtual_server_stat t1\n  JOIN (\n    SELECT\n      tenant_id,\n      tenant_name,\n      svr_ip,\n      svr_port\n    FROM\n      v$unit\n  ) t2 ON t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\nORDER BY\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-14",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  t4.tenant_id,\n  t4.tenant_name,\n  t4.svr_ip,\n  t4.svr_port,\n  cpu_capacity AS cpu_total,\n  cpu_assigned,\n  round(mem_capacity / 1024 / 1024 / 1024) mem_total_gb,\n  round(mem_assigned / 1024 / 1024 / 1024) mem_assigned_gb\nFROM\n  gv$ob_servers t1\n  JOIN (\n    SELECT\n      t2.tenant_id,\n      t3.tenant_name,\n      t2.svr_ip,\n      t2.svr_port\n    FROM\n      gv$ob_units t2\n      LEFT JOIN dba_ob_tenants t3 ON t2.tenant_id = t3.tenant_id\n    WHERE\n      t3.tenant_type <> 'META'\n  ) t4 ON t1.svr_ip = t4.svr_ip\n  AND t1.svr_port = t4.svr_port\nORDER BY\n  t4.tenant_id,\n  t1.svr_ip,\n  t1.svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_disk",children:"ob_tenant_disk"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-15",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t2.tenant_id,\n  t2.tenant_name,\n  t1.svr_ip,\n  t1.svr_port,\n  round(t1.total_size / 1024 / 1024 / 1024) total_size_gb\nFROM\n  __all_virtual_disk_stat t1\n  JOIN (\n    SELECT\n      tenant_id,\n      tenant_name,\n      svr_ip,\n      svr_port\n    FROM\n      gv$unit\n  ) t2 ON t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\nORDER BY\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-15",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  t4.tenant_id AS tenant_id,\n  t4.tenant_name,\n  t4.svr_ip,\n  t4.svr_port,\n  round(t1.data_disk_capacity / 1024 / 1024 / 1024) total_size_gb\nFROM\n  gv$ob_servers t1\n  JOIN (\n    SELECT\n      t2.tenant_id,\n      t3.tenant_name,\n      t2.svr_ip,\n      t2.svr_port\n    FROM\n      gv$ob_units t2\n      LEFT JOIN dba_ob_tenants t3 ON t2.tenant_id = t3.tenant_id\n    WHERE\n      t3.tenant_type <> 'META'\n  ) t4 ON t1.svr_ip = t4.svr_ip\n  AND t1.svr_port = t4.svr_port\nORDER BY\n  t4.tenant_id,\n  t1.svr_ip,\n  t1.svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_task",children:"ob_tenant_task"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-16",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  task_type,\n  MAX(\n    timestampdiff(\n      second,\n      sys_task_status.start_time,\n      current_timestamp\n    )\n  ) max_sys_task_duration_seconds\nFROM\n  __all_virtual_sys_task_status sys_task_status\nGROUP BY\n  tenant_id,\n  task_type\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  task_type;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-16",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  tenant_id,\n  rs_svr_ip AS svr_ip,\n  rs_svr_port svr_port,\n  job_status,\n  job_type AS task_type,\n  timestampdiff(second, start_time, current_timestamp) AS max_sys_task_duration_seconds\nFROM\n  dba_ob_tenant_jobs\nUNION\nSELECT\n  tenant_id,\n  rs_svr_ip AS svr_ip,\n  rs_svr_port svr_port,\n  job_status,\n  job_type AS task_type,\n  timestampdiff(second, start_time, current_timestamp) AS max_sys_task_duration_seconds\nFROM\n  dba_ob_unit_jobs\nWHERE\n  tenant_id IS NOT NULL\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  job_status,\n  task_type;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_server_task",children:"ob_server_task"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-17",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.p,{children:"\u65e0"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-17",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  job_type AS task_type,\n  job_status,\n  timestampdiff(second, start_time, current_timestamp) AS max_sys_task_duration_seconds,\n  svr_ip\nFROM\n  dba_ob_server_jobs\nORDER BY\n  start_time DESC,\n  task_type,\n  job_status;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_memtable",children:"ob_memtable"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-18",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ PARALLEL(2), ENABLE_PARALLEL_DML, MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  MAX(\n    unix_timestamp(now()) - snapshot_version / 1000000\n  ) max_snapshot_duration_seconds\nFROM\n  __all_virtual_table_mgr\nWHERE\n  snapshot_version / 1000000 > 1\n  AND table_type = 0\n  AND is_active = 0\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-18",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ PARALLEL(2), ENABLE_PARALLEL_DML, MONITOR_AGENT */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  MAX(unix_timestamp(now()) - end_log_scn / 1000000000) max_snapshot_duration_seconds\nFROM\n  v$ob_sstables\nWHERE\n  table_type = 'MEMTABLE'\n  AND is_active = 'NO'\n  AND end_log_scn / 1000000000 > 1\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_clog",children:"ob_clog"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-19",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  stat.svr_ip,\n  stat.svr_port,\n  stat.table_id >> 40 tenant_id,\n  stat.replica_type,\n  MAX(stat.next_replay_ts_delta) / 1000000 AS max_clog_sync_delay_seconds\nFROM\n  __all_virtual_clog_stat stat\n  LEFT JOIN (\n    SELECT\n      meta.svr_ip,\n      meta.svr_port,\n      meta.table_id,\n      meta.partition_id\n    FROM\n      __all_virtual_meta_table meta\n    WHERE\n      meta.status = 'REPLICA_STATUS_NORMAL'\n      AND meta.table_id NOT IN (\n        SELECT\n          table_id\n        FROM\n          __all_virtual_partition_migration_status mig\n        WHERE\n          mig.action <> 'END'\n      )\n  ) meta ON stat.table_id = meta.table_id\n  AND stat.partition_idx = meta.partition_id\n  AND stat.svr_ip = meta.svr_ip\n  AND stat.svr_port = meta.svr_port\nGROUP BY\n  svr_ip,\n  svr_port,\n  tenant_id,\n  replica_type\nHAVING\n  max_clog_sync_delay_seconds < 18446744073709\nORDER BY\n  svr_ip,\n  svr_port,\n  tenant_id,\n  replica_type;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-19",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  leader.tenant_id,\n  '0' AS replica_type,\n  abs(\n    MAX(\n      CAST(leader_ts AS signed) - CAST(follower_ts AS signed)\n    )\n  ) / 1000000000 max_clog_sync_delay_seconds\nFROM\n  (\n    SELECT\n      MAX(end_scn) leader_ts,\n      tenant_id,\n      role\n    FROM\n      gv$ob_log_stat\n    WHERE\n      role = 'LEADER'\n    GROUP BY\n      tenant_id\n  ) leader\n  INNER JOIN (\n    SELECT\n      MIN(end_scn) follower_ts,\n      tenant_id,\n      role\n    FROM\n      gv$ob_log_stat\n    WHERE\n      role = 'FOLLOWER'\n    GROUP BY\n      tenant_id\n  ) follower ON leader.tenant_id = follower.tenant_id\nGROUP BY\n  leader.tenant_id\nORDER BY\n  leader.tenant_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_index",children:"ob_index"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-20",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(100000000) */\n  COUNT(*) AS cnt\nFROM\n  gv$table\nWHERE\n  table_type IN (5)\n  AND index_status IN (5, 6, 7);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(100000000) */\n    index_status,\n    tenant_id,\n    tenant_name,\n    table_id,\n    table_name,\n    database_id,\n    database_name,\n    table_type,\n    comment,\n    index_type\nFROM\n    gv$table\nWHERE\n    table_type IN ( 5 )\n    AND tenant_name = 'oboracle'\n    AND database_name = 'ALVIN';\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-20",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT QUERY_TIMEOUT(100000000) */\n  COUNT(*) AS cnt\nFROM\n  cdb_indexes\nWHERE\n  status IN ('ERROR', 'UNUSABLE');\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  status,\n  con_id,\n  owner,\n  index_name,\n  index_type,\n  table_owner,\n  table_name,\n  table_type,\n  uniqueness,\n  compression\nFROM\n  cdb_indexes\nWHERE\n  table_owner = 'ALVIN'\n  AND table_name = 'TEST';\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_memstore",children:"ob_memstore"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-21",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  ip,\n  port,\n  tenant_id,\n  round(active / 1024 / 1024) active_mb,\n  round(total / 1024 / 1024) memstore_used_mb,\n  round(freeze_trigger / 1024 / 1024) freeze_trigger_mb,\n  round(mem_limit / 1024 / 1024) mem_limit_mb,\n  freeze_cnt,\n  round(total / mem_limit, 2) mem_usage\nFROM\n  gv$memstore\nORDER BY\n  ip,\n  port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-21",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(active_span / 1024 / 1024) active_mb,\n  round(memstore_used / 1024 / 1024) memstore_used_mb,\n  round(freeze_trigger / 1024 / 1024) freeze_trigger_mb,\n  round(memstore_limit / 1024 / 1024) mem_limit_mb,\n  freeze_cnt,\n  round(memstore_used / memstore_limit, 2) mem_usage\nFROM\n  gv$ob_memstore\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_compaction",children:"ob_compaction"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-22",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.p,{children:"\u65e0"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-22",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  tenant_id,\n  frozen_scn AS frozen_version,\n  last_scn AS last_version,\n  CASE is_error\n  WHEN 'YES' THEN 1\n  ELSE 0\nEND\n  AS is_error,\n  CASE is_suspended\n  WHEN 'YES' THEN 1\n  ELSE 0\nEND\n  AS is_suspended,\n  start_time AS start_time,\n  frozen_time AS frozen_time,\n  now() AS current\nFROM\n  cdb_ob_major_compaction;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant500_memory",children:"ob_tenant500_memory"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-23",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(hold) / 1024 / 1024) AS hold_mb,\n  round(SUM(used) / 1024 / 1024) AS used_mb\nFROM\n  __all_virtual_memory_info\nWHERE\n  tenant_id = 500\n  AND mod_name <> 'OB_KVSTORE_CACHE_MB'\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-23",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(hold) / 1024 / 1024) AS hold_mb,\n  round(SUM(used) / 1024 / 1024) AS used_mb\nFROM\n  gv$ob_memory\nWHERE\n  tenant_id = 500\n  AND mod_name <> 'KvstorCacheMb'\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_memory",children:"ob_tenant_memory"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-24",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(hold) / 1024 / 1024) AS hold_mb,\n  round(SUM(used) / 1024 / 1024) AS used_mb\nFROM\n  __all_virtual_memory_info\nWHERE\n  mod_name <> 'OB_KVSTORE_CACHE_MB'\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-24",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(hold) / 1024 / 1024) AS hold_mb,\n  round(SUM(used) / 1024 / 1024) AS used_mb\nFROM\n  gv$ob_memory\nWHERE\n  mod_name <> 'KvstorCacheMb'\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_unit_config",children:"ob_unit_config"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-25",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  __all_unit.svr_ip,\n  __all_unit_config.name,\n  max_cpu,\n  min_cpu,\n  round(max_memory / 1024 / 1024 / 1024) AS max_memory_gb,\n  round(min_memory / 1024 / 1024 / 1024) AS min_memory_gb,\n  max_iops,\n  min_iops\nFROM\n  __all_resource_pool,\n  __all_unit_config,\n  __all_unit\nWHERE\n  __all_resource_pool.unit_config_id = __all_unit_config.unit_config_id\n  AND __all_unit.resource_pool_id = __all_resource_pool.resource_pool_id\nORDER BY\n  tenant_id,\n  __all_unit.svr_ip,\n  __all_unit_config.name;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-25",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  p.tenant_id,\n  u.svr_ip,\n  uc.name,\n  uc.max_cpu,\n  uc.min_cpu,\n  round(uc.memory_size / 1024 / 1024 / 1024) AS max_memory_gb,\n  round(uc.log_disk_size / 1024 / 1024 / 1024) AS log_disk_size_gb,\n  uc.max_iops,\n  uc.min_iops\nFROM\n  dba_ob_resource_pools p,\n  dba_ob_unit_configs uc,\n  dba_ob_units u\nWHERE\n  p.unit_config_id = uc.unit_config_id\n  AND u.resource_pool_id = p.resource_pool_id\nORDER BY\n  p.tenant_id,\n  u.svr_ip,\n  uc.name;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_log_disk",children:"ob_tenant_log_disk"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-26",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.p,{children:"\u65e0"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-26",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t1.unit_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t3.tenant_id,\n  t3.tenant_name,\n  round(t1.log_disk_size / 1024 / 1024 / 1024) AS log_disk_size_gb,\n  round(t1.log_disk_in_use / 1024 / 1024 / 1024) AS log_disk_in_use_gb\nFROM\n  (\n    SELECT\n      unit_id,\n      svr_ip,\n      svr_port,\n      SUM(log_disk_size) AS log_disk_size,\n      SUM(log_disk_in_use) AS log_disk_in_use\n    FROM\n      gv$ob_units\n    GROUP BY\n      unit_id,\n      svr_ip,\n      svr_port\n  ) t1\n  JOIN dba_ob_units t2 ON t1.unit_id = t2.unit_id\n  AND t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\n  JOIN (\n    SELECT\n      tenant_id,\n      tenant_name\n    FROM\n      dba_ob_tenants\n    WHERE\n      tenant_type IN ('SYS', 'USER')\n  ) t3 ON t2.tenant_id = t3.tenant_id\nORDER BY\n  t3.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t1.unit_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_system_event_detail",children:"ob_system_event_detail"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-27",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  con_id AS tenant_id,\n  event_id,\n  event AS event_name,\n  wait_class,\n  total_waits,\n  total_timeouts,\n  time_waited * 10000 AS time_waited_us\nFROM\n  v$system_event\nWHERE\n  wait_class <> 'IDLE'\n  AND (\n    con_id > 1000\n    OR con_id = 1\n  )\n  AND total_waits > 0;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-27",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  con_id AS tenant_id,\n  event_id,\n  event AS event_name,\n  wait_class,\n  total_waits,\n  total_timeouts,\n  time_waited * 10000 AS time_waited_us\nFROM\n  v$system_event\nWHERE\n  wait_class <> 'IDLE'\n  AND (\n    con_id > 1000\n    OR con_id = 1\n  )\n  AND total_waits > 0;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_latch",children:"ob_latch"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-28",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  con_id tenant_id,\n  name,\n  svr_ip,\n  svr_port,\n  gets,\n  misses,\n  sleeps,\n  immediate_gets,\n  immediate_misses,\n  spin_gets,\n  wait_time / 1000000 AS wait_time\nFROM\n  gv$latch\nWHERE\n  (\n    con_id = 1\n    OR con_id > 1000\n  )\n  AND (\n    gets > 0\n    OR misses > 0\n    OR sleeps > 0\n    OR immediate_gets > 0\n    OR immediate_misses > 0\n  )\nORDER BY\n  tenant_id,\n  name,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-28",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  con_id tenant_id,\n  name,\n  svr_ip,\n  svr_port,\n  gets,\n  misses,\n  sleeps,\n  immediate_gets,\n  immediate_misses,\n  spin_gets,\n  wait_time / 1000000 AS wait_time\nFROM\n  gv$latch\nWHERE\n  (\n    con_id = 1\n    OR con_id > 1000\n  )\n  AND (\n    gets > 0\n    OR misses > 0\n    OR sleeps > 0\n    OR immediate_gets > 0\n    OR immediate_misses > 0\n  )\nORDER BY\n  tenant_id,\n  name,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_server",children:"ob_tenant_server"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-29",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb,\n  sum(row_count) row_count\nfrom\n  (\n    SELECT\n      tenant_id,\n      svr_ip,\n      svr_port,\n      table_id,\n      partition_id,\n      data_size,\n      required_size,\n      row_count\n    FROM\n      __all_virtual_meta_table\n    union\n    SELECT\n      tenant_id,\n      svr_ip,\n      svr_port,\n      table_id,\n      partition_id,\n      data_size,\n      required_size,\n      row_count\n    FROM\n      __all_root_table\n  )\ngroup by\n  tenant_id,\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4ee5\u4e0b SQL \u6709\u6027\u80fd\u95ee\u9898\uff0c\u4e0d\u518d\u4f7f\u7528\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  tenant_id,\n  svr_ip,\n  svr_port,\n  table_type,\n  SUM(replica_count) AS partition_replica_count,\n  SUM(row_count) AS row_count,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  (\n    SELECT\n      c.tenant_id,\n      COUNT(*) AS replica_count,\n      (\n        CASE b.table_type\n        WHEN 5 THEN 'index_table'\n        ELSE 'data_table'\n        END\n      ) AS table_type,\n      c.svr_ip,\n      c.svr_port,\n      SUM(c.row_count) AS row_count,\n      SUM(c.occupy_size) AS data_size,\n      COUNT(DISTINCT(c.macro_idx_in_data_file)) * 2 * 1024 * 1024 AS required_size\n    FROM\n      (\n        SELECT\n          svr_ip,\n          svr_port,\n          tenant_id,\n          row_count,\n          table_id,\n          partition_id,\n          occupy_size,\n          macro_idx_in_data_file\n        FROM\n          __all_virtual_partition_sstable_macro_info\n        GROUP BY\n          svr_ip,\n          svr_port,\n          tenant_id,\n          table_id,\n          partition_id,\n          macro_idx_in_data_file\n      ) c\n      LEFT JOIN __all_virtual_table b ON b.tenant_id = c.tenant_id\n      AND b.table_id = c.table_id\n    GROUP BY\n      tenant_id,\n      svr_ip,\n      svr_port,\n      partition_id,\n      b.table_type\n  )\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  table_type;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-29",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  cdb_ob_table_locations a\n  JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      __all_virtual_tablet_meta_table\n  ) b ON a.tenant_id = b.tenant_id\n  AND a.tablet_id = b.tablet_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN __all_virtual_table c ON a.tenant_id = c.tenant_id\n  AND a.table_id = c.table_id\nGROUP BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port\nORDER BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4ee5\u4e0b\u4e3a\u89c6\u56fe\u67e5\u8be2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  c.object_type,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  cdb_ob_table_locations a\n  JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      cdb_ob_tablet_replicas\n  ) b ON a.tenant_id = b.tenant_id\n   AND a.tenant_id = 1012\n--   AND a.database_name = 'ALVIN'\n  AND a.tablet_id = b.tablet_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN cdb_objects c ON a.tenant_id = c.con_id\n  AND a.table_id = c.object_id\n  AND c.object_type = 'TABLE'\n--   AND c.object_name = 'test'\nGROUP BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  c.object_type\nORDER BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port;\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u76ee\u524d \u5185\u6838\u63d0\u4f9b\u7684\u6700\u51c6\u786e\u7684\u5185\u90e8\u8868\u662f ",(0,t.jsx)(e.code,{children:"__all_virtual_tablet_sstable_macro_info"})," \u3002\u8fd9\u5f20\u8868\u8be6\u7ec6\u7684\u8bb0\u5f55\u4e86\u7ec6\u5230\u5206\u533a(tablet) \u5bf9\u5e94\u7684\u6bcf\u4e2a\u5b8f\u5757\u7684\u4fe1\u606f\u3002OCP \u5012\u662f\u53ef\u4ee5\u6839\u636e\u5b8f\u5757\u7684 idx \u53bb\u91cd\u540e\u5f97\u5230\u51c6\u786e\u7684\u7edf\u8ba1\u4fe1\u606f\uff084.x \u5373\u4f7f\u662f\u8fd9\u5f20\u8868\u4e5f\u6ca1\u529e\u6cd5\u53bb\u6389\u5c0f sstable \u7684\u91cd\u590d\uff09 421 \u5373\u91c7\u7528\u4e0a\u8ff0\u65b9\u5f0f\u8fdb\u884c\u7edf\u8ba1\u3002\u4f46\u8be5\u8868\u5728\u6570\u636e\u91cf\u5f88\u5927\u7684\u65f6\u5019\u8bb0\u5f55\u975e\u5e38\u591a\uff0cOCP \u5168\u91cf\u7684\u67e5\u8be2\u4f1a\u6709\u6027\u80fd\u95ee\u9898\u3002\u8003\u8651\u5c1d\u8bd5\u8fc7\u6ee4 svr \u67e5\u8be2\u4f1a\u6781\u5927\u63d0\u5347\u67e5\u8be2\u6027\u80fd\uff0c\u4f46\u662f4.x \u7684 OB \u8fd9\u5f20\u8868\u4e0d\u5728\u5185\u5b58\u4e2d\u4e86\uff0c\u800c\u662f\u8d70\u78c1\u76d8\u626b\u63cf\uff0c\u90e8\u5206\u60c5\u51b5\u4f1a\u5c06\u786c\u76d8 IO \u6253\u6ee1\uff0c\u9020\u6210\u7a33\u5b9a\u6027\u95ee\u9898\u3002"]}),"\n",(0,t.jsxs)(e.p,{children:["\u8be6\u89c1\u76f8\u5173 git ",(0,t.jsx)(e.a,{href:"https://code.alipay.com/oceanbase-cloud-platform/ocp-all-in-one/pull_requests/10663?tab=diff",children:"PR"}),"\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  a.row_count,\n  round(a.data_size / 1024 / 1024) AS data_size_mb,\n  round(b.required_size / 1024 / 1024) AS required_size_mb\nFROM\n  (\n    SELECT\n      tenant_id,\n      svr_ip,\n      svr_port,\n      SUM(occupy_size) AS data_size,\n      SUM(row_count) AS row_count\n    FROM\n      (\n        SELECT\n          tenant_id,\n          svr_ip,\n          svr_port,\n          tablet_id,\n          row_count,\n          occupy_size\n        FROM\n          __all_virtual_tablet_sstable_macro_info\n        GROUP BY\n          tenant_id,\n          tablet_id,\n          svr_ip,\n          svr_port,\n          macro_block_idx\n      )\n    GROUP BY\n      tenant_id,\n      svr_ip,\n      svr_port\n  ) a\n  INNER JOIN (\n    SELECT\n      tenant_id,\n      svr_ip,\n      svr_port,\n      SUM(required_size) AS required_size\n    FROM\n      (\n        SELECT\n          tenant_id,\n          svr_ip,\n          svr_port,\n          COUNT(DISTINCT(macro_block_idx)) * 2 * 1024 * 1024 AS required_size\n        FROM\n          __all_virtual_tablet_sstable_macro_info\n        GROUP BY\n          tenant_id,\n          svr_ip,\n          svr_port,\n          macro_block_idx\n      )\n    GROUP BY\n      tenant_id,\n      svr_ip,\n      svr_port\n  ) b ON a.tenant_id = b.tenant_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\nORDER BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_server_data_index",children:"ob_tenant_server_data_index"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-30",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  b.svr_ip,\n  b.svr_port,\n  round(SUM(size) / 1024 / 1024) AS data_size_mb\nFROM\n  __all_virtual_table_mgr b\n  LEFT JOIN __all_virtual_table a ON a.tenant_id = b.tenant_id\n  AND a.table_id = b.index_id\nWHERE\n  a.table_type = 5\nGROUP BY\n  1,\n  2,\n  3;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-30",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) QUERY_TIMEOUT(50000000) */\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port,\n  SUM(data_size) AS data_size\nFROM\n  cdb_ob_table_locations a\n  JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      __all_virtual_tablet_meta_table\n  ) b ON a.tenant_id = b.tenant_id\n  AND a.tablet_id = b.tablet_id\n  AND a.svr_ip = b.svr_ip\n  AND a.svr_port = b.svr_port\n  JOIN __all_virtual_table c ON a.tenant_id = c.tenant_id\n  AND c.table_type = 5\n  AND a.table_id = c.table_id\nGROUP BY\n  a.tenant_id,\n  a.svr_ip,\n  a.svr_port;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4ee5\u4e0b SQL \u76ee\u524d\u5df2\u7ecf\u4e0d\u7528\u4e86\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  tenant_id,\n  svr_ip,\n  svr_port,\n  SUM(row_count) AS row_count,\n  round(SUM(data_size) / 1024 / 1024) AS data_size_mb,\n  table_type\nFROM\n  (\n    SELECT\n      a.tenant_id,\n      a.svr_ip,\n      a.svr_port,\n      SUM(row_count) AS row_count,\n      SUM(occupy_size) AS data_size,\n      (\n        CASE table_type\n        WHEN 'INDEX' THEN 'index_table'\n        ELSE 'data_table'\n        END\n      ) AS table_type\n    FROM\n      (\n        SELECT\n          tenant_id,\n          svr_ip,\n          svr_port,\n          tablet_id,\n          row_count,\n          occupy_size\n        FROM\n          __all_virtual_tablet_sstable_macro_info\n        GROUP BY\n          tenant_id,\n          tablet_id,\n          svr_ip,\n          svr_port,\n          macro_block_idx\n      ) a\n      LEFT JOIN cdb_ob_table_locations b ON a.tenant_id = b.tenant_id\n      AND a.tablet_id = b.tablet_id\n    GROUP BY\n      a.tenant_id,\n      svr_ip,\n      svr_port,\n      table_type\n  )\nGROUP BY\n  tenant_id,\n  svr_port,\n  svr_ip,\n  table_type\nORDER BY\n  tenant_id,\n  svr_port,\n  svr_ip,\n  table_type;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_unit",children:"ob_tenant_unit"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-31",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) */\n  coalesce(tenant_id, - 1) AS tenant_id,\n  tenant_name,\n  svr_ip,\n  svr_port,\n  unit_id,\n  zone,\n  max_cpu,\n  min_cpu,\n  round(max_memory / 1024 / 1024 / 1024) AS max_memory_gb,\n  round(min_memory / 1024 / 1024 / 1024) AS min_memory_gb,\n  1 AS unit_count\nFROM\n  gv$unit\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  unit_id;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-31",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t1.unit_id,\n  t1.zone,\n  t1.min_cpu,\n  t1.max_cpu,\n  round(t1.max_memory / 1024 / 1024 / 1024) AS max_memory_gb,\n  round(t1.min_memory / 1024 / 1024 / 1024) AS min_memory_gb\nFROM\n  (\n    SELECT\n      unit_id,\n      svr_ip,\n      svr_port,\n      zone,\n      SUM(min_cpu) AS min_cpu,\n      SUM(max_cpu) AS max_cpu,\n      SUM(memory_size) AS min_memory,\n      SUM(memory_size) AS max_memory\n    FROM\n      gv$ob_units\n    GROUP BY\n      unit_id,\n      svr_ip,\n      svr_port\n  ) t1\n  JOIN dba_ob_units t2 ON t1.unit_id = t2.unit_id\n  AND t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\nORDER BY\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t1.unit_id;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_server_partition_replica",children:"ob_server_partition_replica"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-32",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) */\n  t1.svr_ip,\n  t1.svr_port,\n  t2.zone,\n  t1.`count` AS count\nFROM\n  (\n    SELECT\n      svr_ip,\n      svr_port,\n      COUNT(*) AS `count`\n    FROM\n      __all_virtual_partition_info\n    GROUP BY\n      svr_ip,\n      svr_port\n  ) t1\n  JOIN __all_server t2 ON t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\nORDER BY\n  t1.svr_ip,\n  t1.svr_port,\n  t2.zone;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) */\n  t1.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t2.zone,\n  t1.`count` AS count\nFROM\n  (\n    SELECT\n      tenant_id,\n      svr_ip,\n      svr_port,\n      COUNT(*) AS `count`\n    FROM\n      __all_virtual_partition_info\n    GROUP BY\n      tenant_id,\n      svr_ip,\n      svr_port\n  ) t1\n  JOIN __all_server t2 ON t1.svr_ip = t2.svr_ip\n  AND t1.svr_port = t2.svr_port\nORDER BY\n  t1.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  t2.zone;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-32",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.p,{children:"\u65e0"}),"\n",(0,t.jsx)(e.h2,{id:"ob_server_partition",children:"ob_server_partition"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-33",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.p,{children:"\u4ee5\u4e0b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) */\n  t.svr_ip,\n  t.svr_port,\n  t.zone,\n  coalesce(_max_partition_cnt_per_server, 30000) AS replica_limit\nFROM\n  (\n    SELECT\n      svr_ip,\n      svr_port,\n      MAX(zone) AS zone,\n      MAX(\n        CASE `name`\n        WHEN '_max_partition_cnt_per_server' THEN `value`\n        ELSE NULL\n        END\n      ) AS _max_partition_cnt_per_server\n    FROM\n      __all_virtual_sys_parameter_stat\n    GROUP BY\n      `svr_ip`,\n      `svr_port`\n  ) t;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ READ_CONSISTENCY(WEAK) */\n  svr_ip,\n  svr_port,\n  zone,\n  `value`\nFROM\n  __all_virtual_sys_parameter_stat\nWHERE\n  `name` = '_max_partition_cnt_per_server'\nORDER BY\n  svr_ip,\n  svr_port;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-33",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.p,{children:"\u65e0"}),"\n",(0,t.jsx)(e.h2,{id:"ob_tenant_context_memory",children:"ob_tenant_context_memory"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-34",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT READ_CONSISTENCY(WEAK) */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  mod_name,\n  round(SUM(hold) / 1024 / 1024) AS hold_mb,\n  round(SUM(used) / 1024 / 1024) AS used_mb\nFROM\n  __all_virtual_memory_info\nWHERE\n  mod_name <> 'OB_KVSTORE_CACHE_MB'\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  mod_name\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  mod_name;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-34",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /* MONITOR_AGENT */\n  tenant_id,\n  svr_ip,\n  svr_port,\n  mod_name,\n  round(SUM(hold) / 1024 / 1024) AS hold_mb,\n  round(SUM(used) / 1024 / 1024) AS used_mb\nFROM\n  gv$ob_memory\nWHERE\n  mod_name <> 'KvstorCacheMb'\nGROUP BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  mod_name\nORDER BY\n  tenant_id,\n  svr_ip,\n  svr_port,\n  mod_name;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"log_stream",children:"log_stream"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-35",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.p,{children:"\u65e0"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-35",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.p,{children:"OceanBase 4.1+ :"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  /*+ MONITOR_AGENT */\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port,\n  sum(t1.degraded_list <> '') AS degraded_count\nFROM\n  gv$ob_log_stat t1\n  INNER JOIN dba_ob_tenants t2 ON t1.tenant_id = t2.tenant_id\n  AND t2.tenant_type != 'META'\nGROUP BY\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port\nORDER BY\n  t2.tenant_id,\n  t1.svr_ip,\n  t1.svr_port;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"ob_database_disk",children:"ob_database_disk"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-36",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t1.tenant_id,\n  t2.database_id,\n  t3.database_name,\n  round(SUM(t1.data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(t1.required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  (\n    SELECT\n      tenant_id,\n      table_id,\n      SUM(data_size) AS data_size,\n      SUM(required_size) AS required_size\n    FROM\n      __all_virtual_tenant_partition_meta_table\n    GROUP BY\n      table_id\n  ) t1\n  LEFT JOIN (\n    SELECT\n      tenant_id,\n      table_id,\n      database_id\n    FROM\n      __all_virtual_table\n  ) t2 ON t1.tenant_id = t2.tenant_id\n  AND t1.table_id = t2.table_id\n  LEFT JOIN (\n    SELECT\n      tenant_id,\n      database_id,\n      database_name\n    FROM\n      gv$database\n  ) t3 ON t2.tenant_id = t3.tenant_id\n  AND t2.database_id = t3.database_id\nGROUP BY\n  t2.database_id\nORDER BY\n  data_size_mb DESC;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-36",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT\n  t1.tenant_id,\n  t1.database_name,\n  t3.object_id AS database_id,\n  round(SUM(t2.data_size) / 1024 / 1024) AS data_size_mb,\n  round(SUM(t2.required_size) / 1024 / 1024) AS required_size_mb\nFROM\n  (\n    SELECT\n      tenant_id,\n      database_name,\n      table_id,\n      tablet_id\n    FROM\n      cdb_ob_table_locations\n  ) t1\n  LEFT JOIN (\n    SELECT\n      tenant_id,\n      tablet_id,\n      svr_ip,\n      svr_port,\n      data_size,\n      required_size\n    FROM\n      cdb_ob_tablet_replicas\n  ) t2 ON t1.tenant_id = t2.tenant_id\n  AND t1.tablet_id = t2.tablet_id\n  LEFT JOIN (\n    SELECT\n      con_id,\n      object_name,\n      object_id\n    FROM\n      cdb_objects\n    WHERE\n      object_type = 'DATABASE'\n  ) t3 ON t1.tenant_id = t3.con_id\n  AND t1.database_name = t3.object_name\nGROUP BY\n  t1.database_name\nORDER BY\n  data_size_mb DESC;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"tenant",children:"tenant"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-37",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT tenant_id ob_tenant_id, tenant_name FROM __all_tenant\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-37",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT tenant_id ob_tenant_id, tenant_name FROM DBA_OB_TENANTS WHERE tenant_type<>'META'\n"})}),"\n",(0,t.jsx)(e.h2,{id:"unit",children:"unit"}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-3x-38",children:"OceanBase 3.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT tenant_id ob_tenant_id, tenant_name FROM v$unit\n"})}),"\n",(0,t.jsx)(e.h3,{id:"oceanbase-4x-38",children:"OceanBase 4.x"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SELECT a.tenant_id as ob_tenant_id, a.tenant_name FROM DBA_OB_TENANTS a join v$ob_units b on a.tenant_id = b.tenant_id WHERE a.tenant_type<>'META'\n"})})]})}function l(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},28453:(n,e,_)=>{_.d(e,{R:()=>s,x:()=>r});var t=_(96540);const a={},i=t.createContext(a);function s(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);